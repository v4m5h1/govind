{"version":3,"file":"Stack.Horizontal.Wrap.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Wrap.Example.tsx"],"names":[],"mappings":";;;IAOA;QAAgD,sDAAkC;QAChF,oCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YAyDO,oBAAc,GAAG,UAAC,KAAa;gBACrC,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;YACvC,CAAC,CAAC;YA9DA,KAAI,CAAC,KAAK,GAAG;gBACX,UAAU,EAAE,GAAG;aAChB,CAAC;;QACJ,CAAC;QAEM,2CAAM,GAAb;YACE,IAAM,MAAM,GAAG,uCAAc,CAAC;gBAC5B,IAAI,EAAE;oBACJ,UAAU,EAAE,uCAAc,CAAC,aAAa;oBACxC,KAAK,EAAK,IAAI,CAAC,KAAK,CAAC,UAAU,MAAG;iBACnC;gBAED,IAAI,EAAE;oBACJ,KAAK,EAAE,EAAE;oBACT,MAAM,EAAE,EAAE;oBACV,OAAO,EAAE,MAAM;oBACf,UAAU,EAAE,QAAQ;oBACpB,cAAc,EAAE,QAAQ;oBACxB,UAAU,EAAE,uCAAc,CAAC,YAAY;oBACvC,KAAK,EAAE,uCAAc,CAAC,KAAK;iBAC5B;aACF,CAAC,CAAC;YAEH,IAAM,MAAM,GAAG;gBACb,YAAY,EAAE;oBACZ,WAAW,EAAE,EAAE;iBAChB;gBACD,SAAS,EAAE;oBACT,WAAW,EAAE,EAAE;iBAChB;aACF,CAAC;YAEF,OAAO,CACL,oBAAC,8BAAK,IAAC,MAAM,EAAE,MAAM,CAAC,YAAY;gBAChC,oBAAC,+BAAM,IACL,KAAK,EAAC,wEAAwE,EAC9E,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,cAAc,GAC7B;gBAEF,oBAAC,8BAAK,IAAC,UAAU,QAAC,IAAI,QAAC,MAAM,EAAE,MAAM,CAAC,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;oBACrE,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,QAAU;oBACtC,8BAAM,SAAS,EAAE,MAAM,CAAC,IAAI,SAAW,CACjC,CACF,CACT,CAAC;QACJ,CAAC;QAKH,iCAAC;IAAD,CAAC,AAlED,CAAgD,KAAK,CAAC,SAAS,GAkE9D;IAlEY,gEAA0B","sourcesContent":["import * as React from 'react';\nimport { mergeStyleSets, DefaultPalette, Slider, Stack } from 'office-ui-fabric-react';\n\nexport interface IExampleState {\n  stackWidth: number;\n}\n\nexport class HorizontalStackWrapExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackWidth: 100\n    };\n  }\n\n  public render(): JSX.Element {\n    const styles = mergeStyleSets({\n      root: {\n        background: DefaultPalette.themeTertiary,\n        width: `${this.state.stackWidth}%`\n      },\n\n      item: {\n        width: 50,\n        height: 50,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: DefaultPalette.themePrimary,\n        color: DefaultPalette.white\n      }\n    });\n\n    const tokens = {\n      sectionStack: {\n        childrenGap: 10\n      },\n      wrapStack: {\n        childrenGap: 30\n      }\n    };\n\n    return (\n      <Stack tokens={tokens.sectionStack}>\n        <Slider\n          label=\"Change the stack width to see how child items wrap onto multiple rows:\"\n          min={1}\n          max={100}\n          step={1}\n          defaultValue={100}\n          showValue={true}\n          onChange={this._onWidthChange}\n        />\n\n        <Stack horizontal wrap tokens={tokens.wrapStack} className={styles.root}>\n          <span className={styles.item}>1</span>\n          <span className={styles.item}>2</span>\n          <span className={styles.item}>3</span>\n          <span className={styles.item}>4</span>\n          <span className={styles.item}>5</span>\n          <span className={styles.item}>6</span>\n          <span className={styles.item}>7</span>\n          <span className={styles.item}>8</span>\n          <span className={styles.item}>9</span>\n          <span className={styles.item}>10</span>\n        </Stack>\n      </Stack>\n    );\n  }\n\n  private _onWidthChange = (value: number): void => {\n    this.setState({ stackWidth: value });\n  };\n}\n"]}