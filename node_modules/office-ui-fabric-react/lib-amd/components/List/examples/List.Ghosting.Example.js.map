{"version":3,"file":"List.Ghosting.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Ghosting.Example.tsx"],"names":[],"mappings":";;;IAYA,IAAM,KAAK,GAAG,kBAAQ,EAAE,CAAC;IACzB,IAAM,UAAU,GAAG,wBAAc,CAAC;QAChC,SAAS,EAAE;YACT,QAAQ,EAAE,MAAM;YAChB,SAAS,EAAE,GAAG;SACf;QACD,QAAQ,EAAE;YACR,uBAAa,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC;YACnC;gBACE,SAAS,EAAE,EAAE;gBACb,OAAO,EAAE,EAAE;gBACX,SAAS,EAAE,YAAY;gBACvB,YAAY,EAAE,eAAa,KAAK,CAAC,cAAc,CAAC,WAAa;gBAC7D,OAAO,EAAE,MAAM;gBACf,SAAS,EAAE;oBACT,SAAS,EAAE,EAAE,UAAU,EAAE,KAAK,CAAC,OAAO,CAAC,YAAY,EAAE;iBACtD;aACF;SACF;QACD,SAAS,EAAE;YACT,UAAU,EAAE,CAAC;SACd;QACD,WAAW,EAAE;YACX,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,QAAQ;YAClB,QAAQ,EAAE,CAAC;SACZ;QACD,QAAQ,EAAE;YACR,2BAAiB,CAAC,MAAM;YACxB;gBACE,UAAU,EAAE,QAAQ;gBACpB,QAAQ,EAAE,QAAQ;gBAClB,YAAY,EAAE,UAAU;aACzB;SACF;QACD,SAAS,EAAE;YACT,QAAQ,EAAE,mBAAS,CAAC,KAAK;YACzB,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,eAAe;YACpC,YAAY,EAAE,EAAE;SACjB;QACD,OAAO,EAAE;YACP,SAAS,EAAE,QAAQ;YACnB,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,eAAe;YACpC,QAAQ,EAAE,mBAAS,CAAC,KAAK;YACzB,UAAU,EAAE,CAAC;SACd;KACF,CAAC,CAAC;IAEH;QAAyC,+CAA0C;QAAnF;;QA8BA,CAAC;QA7BQ,oCAAM,GAAb;YACU,IAAA,wBAAK,CAAgB;YAE7B,OAAO,CACL,oBAAC,qBAAS,IAAC,SAAS,EAAE,8BAAkB,CAAC,QAAQ;gBAC/C,6BAAK,SAAS,EAAE,UAAU,CAAC,SAAS,wBAAsB,IAAI;oBAC5D,oBAAC,WAAI,IAAC,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa,GAAI,CACpD,CACI,CACb,CAAC;QACJ,CAAC;QAEO,2CAAa,GAArB,UAAsB,IAAkB,EAAE,KAAa,EAAE,WAAoB;YAC3E,OAAO,CACL,6BAAK,SAAS,EAAE,UAAU,CAAC,QAAQ,uBAAqB,IAAI;gBAC1D,oBAAC,aAAK,IACJ,SAAS,EAAE,UAAU,CAAC,SAAS,EAC/B,GAAG,EAAE,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAC7C,KAAK,EAAE,EAAE,EACT,MAAM,EAAE,EAAE,EACV,QAAQ,EAAE,gBAAQ,CAAC,KAAK,GACxB;gBACF,6BAAK,SAAS,EAAE,UAAU,CAAC,WAAW;oBACpC,6BAAK,SAAS,EAAE,UAAU,CAAC,QAAQ,IAAG,IAAI,CAAC,IAAI,CAAO;oBACtD,6BAAK,SAAS,EAAE,UAAU,CAAC,SAAS,IAAG,UAAQ,KAAO,CAAO,CACzD,CACF,CACP,CAAC;QACJ,CAAC;QACH,0BAAC;IAAD,CAAC,AA9BD,CAAyC,KAAK,CAAC,SAAS,GA8BvD;IA9BY,kDAAmB","sourcesContent":["import * as React from 'react';\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { mergeStyleSets, getTheme, DefaultFontStyles, FontSizes, getFocusStyle } from 'office-ui-fabric-react/lib/Styling';\n\nexport type IExampleItem = { name: string; thumbnail: string };\n\nexport interface IListGhostingExampleProps {\n  items: IExampleItem[];\n}\n\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n  container: {\n    overflow: 'auto',\n    maxHeight: 500\n  },\n  itemCell: [\n    getFocusStyle(theme, { inset: -1 }),\n    {\n      minHeight: 54,\n      padding: 10,\n      boxSizing: 'border-box',\n      borderBottom: `1px solid ${theme.semanticColors.bodyDivider}`,\n      display: 'flex',\n      selectors: {\n        '&:hover': { background: theme.palette.neutralLight }\n      }\n    }\n  ],\n  itemImage: {\n    flexShrink: 0\n  },\n  itemContent: {\n    marginLeft: 10,\n    overflow: 'hidden',\n    flexGrow: 1\n  },\n  itemName: [\n    DefaultFontStyles.xLarge,\n    {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }\n  ],\n  itemIndex: {\n    fontSize: FontSizes.small,\n    color: theme.palette.neutralTertiary,\n    marginBottom: 10\n  },\n  chevron: {\n    alignSelf: 'center',\n    marginLeft: 10,\n    color: theme.palette.neutralTertiary,\n    fontSize: FontSizes.large,\n    flexShrink: 0\n  }\n});\n\nexport class ListGhostingExample extends React.Component<IListGhostingExampleProps> {\n  public render(): JSX.Element {\n    const { items } = this.props;\n\n    return (\n      <FocusZone direction={FocusZoneDirection.vertical}>\n        <div className={classNames.container} data-is-scrollable={true}>\n          <List items={items} onRenderCell={this._onRenderCell} />\n        </div>\n      </FocusZone>\n    );\n  }\n\n  private _onRenderCell(item: IExampleItem, index: number, isScrolling: boolean): JSX.Element {\n    return (\n      <div className={classNames.itemCell} data-is-focusable={true}>\n        <Image\n          className={classNames.itemImage}\n          src={isScrolling ? undefined : item.thumbnail}\n          width={50}\n          height={50}\n          imageFit={ImageFit.cover}\n        />\n        <div className={classNames.itemContent}>\n          <div className={classNames.itemName}>{item.name}</div>\n          <div className={classNames.itemIndex}>{`Item ${index}`}</div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}