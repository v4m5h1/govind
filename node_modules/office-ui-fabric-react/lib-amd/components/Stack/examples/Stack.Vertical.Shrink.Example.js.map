{"version":3,"file":"Stack.Vertical.Shrink.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Vertical.Shrink.Example.tsx"],"names":[],"mappings":";;;IAOA;QAAgD,sDAAkC;QAChF,oCAAY,KAAS;YAArB,YACE,kBAAM,KAAK,CAAC,SAIb;YAyDO,qBAAe,GAAG,UAAC,KAAa;gBACtC,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;YACxC,CAAC,CAAC;YA9DA,KAAI,CAAC,KAAK,GAAG;gBACX,WAAW,EAAE,GAAG;aACjB,CAAC;;QACJ,CAAC;QAEM,2CAAM,GAAb;YACE,IAAM,MAAM,GAAG,uCAAc,CAAC;gBAC5B,IAAI,EAAE;oBACJ,UAAU,EAAE,uCAAc,CAAC,aAAa;oBACxC,MAAM,EAAK,IAAI,CAAC,KAAK,CAAC,WAAW,MAAG;oBACpC,QAAQ,EAAE,QAAQ;iBACnB;gBAED,IAAI,EAAE;oBACJ,OAAO,EAAE,MAAM;oBACf,UAAU,EAAE,QAAQ;oBACpB,cAAc,EAAE,QAAQ;oBACxB,UAAU,EAAE,uCAAc,CAAC,YAAY;oBACvC,KAAK,EAAE,uCAAc,CAAC,KAAK;oBAC3B,QAAQ,EAAE,QAAQ;iBACnB;gBAED,SAAS,EAAE;oBACT,MAAM,EAAE,GAAG;iBACZ;aACF,CAAC,CAAC;YAEH,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;YAErD,OAAO,CACL,oBAAC,8BAAK,IAAC,MAAM,EAAE,WAAW;gBACxB,oBAAC,+BAAM,IACL,KAAK,EAAC,wDAAwD,EAC9D,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,eAAe,GAC9B;gBACF,6BAAK,SAAS,EAAE,MAAM,CAAC,SAAS;oBAC9B,oBAAC,8BAAK,IAAC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;wBAC7D,oBAAC,8BAAK,CAAC,IAAI,IAAC,IAAI,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,eAE1B;wBACb,oBAAC,8BAAK,CAAC,IAAI,IAAC,IAAI,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,eAE1B;wBACb,oBAAC,8BAAK,CAAC,IAAI,IAAC,IAAI,QAAC,aAAa,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,MAAM,EAAE,EAAE,EAAE,EAAE,qBAE1E;wBACb,oBAAC,8BAAK,CAAC,IAAI,IAAC,IAAI,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,eAE1B,CACP,CACJ,CACA,CACT,CAAC;QACJ,CAAC;QAKH,iCAAC;IAAD,CAAC,AAlED,CAAgD,KAAK,CAAC,SAAS,GAkE9D;IAlEY,gEAA0B","sourcesContent":["import * as React from 'react';\nimport { mergeStyleSets, DefaultPalette, IStackTokens, Slider, Stack } from 'office-ui-fabric-react';\n\nexport interface IExampleState {\n  stackHeight: number;\n}\n\nexport class VerticalStackShrinkExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackHeight: 100\n    };\n  }\n\n  public render(): JSX.Element {\n    const styles = mergeStyleSets({\n      root: {\n        background: DefaultPalette.themeTertiary,\n        height: `${this.state.stackHeight}%`,\n        overflow: 'hidden'\n      },\n\n      item: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: DefaultPalette.themePrimary,\n        color: DefaultPalette.white,\n        overflow: 'hidden'\n      },\n\n      container: {\n        height: 200\n      }\n    });\n\n    const stackTokens: IStackTokens = { childrenGap: 5 };\n\n    return (\n      <Stack tokens={stackTokens}>\n        <Slider\n          label=\"Change the stack height to see how child items shrink:\"\n          min={1}\n          max={100}\n          step={1}\n          defaultValue={100}\n          showValue={true}\n          onChange={this._onHeightChange}\n        />\n        <div className={styles.container}>\n          <Stack tokens={stackTokens} padding={10} className={styles.root}>\n            <Stack.Item grow className={styles.item}>\n              I shrink\n            </Stack.Item>\n            <Stack.Item grow className={styles.item}>\n              I shrink\n            </Stack.Item>\n            <Stack.Item grow disableShrink className={styles.item} styles={{ root: { height: 50 } }}>\n              I don't shrink\n            </Stack.Item>\n            <Stack.Item grow className={styles.item}>\n              I shrink\n            </Stack.Item>\n          </Stack>\n        </div>\n      </Stack>\n    );\n  }\n\n  private _onHeightChange = (value: number): void => {\n    this.setState({ stackHeight: value });\n  };\n}\n"]}