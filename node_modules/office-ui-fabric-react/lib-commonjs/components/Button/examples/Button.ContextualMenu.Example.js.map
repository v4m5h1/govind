{"version":3,"file":"Button.ContextualMenu.Example.js","sourceRoot":"../src/","sources":["components/Button/examples/Button.ContextualMenu.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAgF;AAChF,4EAAiG;AAEjG;IAAiD,uDAAiC;IAAlF;QAAA,qEA4CC;QAJS,cAAQ,GAAG,UAAC,SAA+B;YACjD,wCAAwC;YACxC,OAAO,oBAAC,+BAAc,uBAAK,SAAS,EAAI,CAAC;QAC3C,CAAC,CAAC;;IACJ,CAAC;IA3CQ,4CAAM,GAAb;QACQ,IAAA,eAAkC,EAAhC,sBAAQ,EAAE,oBAAO,CAAgB;QAEzC,OAAO,CACL,6BAAK,SAAS,EAAC,iCAAiC;YAC9C;gBACE,oBAAC,sBAAa,0BACO,MAAM,EACzB,QAAQ,EAAE,QAAQ,EAClB,kBAAkB,EAAE,IAAI,EACxB,OAAO,EAAE,OAAO,EAChB,SAAS,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,EAC9B,MAAM,EAAE,IAAI,CAAC,QAAQ,EACrB,IAAI,EAAC,KAAK;oBACV,yCAAyC;oBACzC,WAAW,EAAE,UAAA,EAAE;wBACb,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;oBAClB,CAAC,EACD,SAAS,EAAE;wBACT,KAAK,EAAE;4BACL;gCACE,GAAG,EAAE,cAAc;gCACnB,IAAI,EAAE,eAAe;gCACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,MAAM,EAAE;6BAChC;4BACD;gCACE,GAAG,EAAE,eAAe;gCACpB,IAAI,EAAE,gBAAgB;gCACtB,SAAS,EAAE,EAAE,QAAQ,EAAE,UAAU,EAAE;6BACpC;yBACF;wBACD,oBAAoB,EAAE,IAAI;qBAC3B,GACD,CACE,CACF,CACP,CAAC;IACJ,CAAC;IAMH,kCAAC;AAAD,CAAC,AA5CD,CAAiD,KAAK,CAAC,SAAS,GA4C/D;AA5CY,kEAA2B","sourcesContent":["import * as React from 'react';\r\nimport { DefaultButton, IButtonProps } from 'office-ui-fabric-react/lib/Button';\r\nimport { IContextualMenuProps, ContextualMenu } from 'office-ui-fabric-react/lib/ContextualMenu';\r\n\r\nexport class ButtonContextualMenuExample extends React.Component<IButtonProps, {}> {\r\n  public render(): JSX.Element {\r\n    const { disabled, checked } = this.props;\r\n\r\n    return (\r\n      <div className=\"ms-ContextualMenuButtonsExample\">\r\n        <div>\r\n          <DefaultButton\r\n            data-automation-id=\"test\"\r\n            disabled={disabled}\r\n            allowDisabledFocus={true}\r\n            checked={checked}\r\n            iconProps={{ iconName: 'Add' }}\r\n            menuAs={this._getMenu}\r\n            text=\"New\"\r\n            // tslint:disable-next-line:jsx-no-lambda\r\n            onMenuClick={ev => {\r\n              console.log(ev);\r\n            }}\r\n            menuProps={{\r\n              items: [\r\n                {\r\n                  key: 'emailMessage',\r\n                  text: 'Email message',\r\n                  iconProps: { iconName: 'Mail' }\r\n                },\r\n                {\r\n                  key: 'calendarEvent',\r\n                  text: 'Calendar event',\r\n                  iconProps: { iconName: 'Calendar' }\r\n                }\r\n              ],\r\n              directionalHintFixed: true\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private _getMenu = (menuProps: IContextualMenuProps): JSX.Element => {\r\n    // Customize contextual menu with menuAs\r\n    return <ContextualMenu {...menuProps} />;\r\n  };\r\n}\r\n"]}