{"version":3,"file":"CommandBar.base.js","sourceRoot":"../src/","sources":["components/CommandBar/CommandBar.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { BaseComponent, css, nullRender } from '../../Utilities';\nimport { ICommandBar, ICommandBarItemProps, ICommandBarProps, ICommandBarStyleProps, ICommandBarStyles } from './CommandBar.types';\nimport { IOverflowSet, OverflowSet } from '../../OverflowSet';\nimport { IResizeGroup, ResizeGroup } from '../../ResizeGroup';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { classNamesFunction } from '../../Utilities';\nimport { CommandBarButton, IButtonProps } from '../../Button';\nimport { TooltipHost } from '../../Tooltip';\n\nconst getClassNames = classNamesFunction<ICommandBarStyleProps, ICommandBarStyles>();\n\nexport interface ICommandBarData {\n  /**\n   * Items being rendered in the primary region\n   */\n  primaryItems: ICommandBarItemProps[];\n  /**\n   * Items being rendered in the overflow\n   */\n  overflowItems: ICommandBarItemProps[];\n  /**\n   * Items being rendered on the far side\n   */\n  farItems: ICommandBarItemProps[] | undefined;\n  /**\n   * Length of original overflowItems to ensure that they are not moved into primary region on resize\n   */\n  minimumOverflowItems: number;\n  /**\n   * Unique string used to cache the width of the command bar\n   */\n  cacheKey: string;\n}\n\nexport class CommandBarBase extends BaseComponent<ICommandBarProps, {}> implements ICommandBar {\n  public static defaultProps: ICommandBarProps = {\n    items: [],\n    overflowItems: []\n  };\n\n  private _overflowSet = React.createRef<IOverflowSet>();\n  private _resizeGroup = React.createRef<IResizeGroup>();\n  private _classNames: { [key in keyof ICommandBarStyles]: string };\n\n  public render(): JSX.Element {\n    const {\n      className,\n      items,\n      overflowItems,\n      farItems,\n      styles,\n      theme,\n      onReduceData = this._onReduceData,\n      onGrowData = this._onGrowData\n    } = this.props;\n\n    const commandBarData: ICommandBarData = {\n      primaryItems: [...items],\n      overflowItems: [...overflowItems!],\n      minimumOverflowItems: [...overflowItems!].length, // for tracking\n      farItems,\n      cacheKey: ''\n    };\n\n    this._classNames = getClassNames(styles!, { theme: theme! });\n\n    return (\n      <ResizeGroup\n        componentRef={this._resizeGroup}\n        className={className}\n        data={commandBarData}\n        onReduceData={onReduceData}\n        onGrowData={onGrowData}\n        onRenderData={this._onRenderData}\n      />\n    );\n  }\n\n  public focus(): void {\n    const { current: overflowSet } = this._overflowSet;\n\n    overflowSet && overflowSet.focus();\n  }\n\n  public remeasure(): void {\n    this._resizeGroup.current && this._resizeGroup.current.remeasure();\n  }\n\n  private _onRenderData = (data: ICommandBarData): JSX.Element => {\n    return (\n      <FocusZone\n        className={css(this._classNames.root)}\n        direction={FocusZoneDirection.horizontal}\n        role={'menubar'}\n        aria-label={this.props.ariaLabel}\n      >\n        {/*Primary Items*/}\n        <OverflowSet\n          componentRef={this._resolveRef('_overflowSet')}\n          className={css(this._classNames.primarySet)}\n          doNotContainWithinFocusZone={true}\n          role={'presentation'}\n          items={data.primaryItems}\n          overflowItems={data.overflowItems.length ? data.overflowItems : undefined}\n          onRenderItem={this._onRenderItem}\n          onRenderOverflowButton={this._onRenderOverflowButton}\n        />\n\n        {/*Secondary Items*/}\n        {data.farItems && (\n          <OverflowSet\n            className={css(this._classNames.secondarySet)}\n            doNotContainWithinFocusZone={true}\n            role={'presentation'}\n            items={data.farItems}\n            onRenderItem={this._onRenderItem}\n            onRenderOverflowButton={nullRender}\n          />\n        )}\n      </FocusZone>\n    );\n  };\n\n  private _onRenderItem = (item: ICommandBarItemProps): JSX.Element | React.ReactNode => {\n    const CommandButtonType = this.props.buttonAs || item.commandBarButtonAs || CommandBarButton;\n\n    const itemText = item.text || item.name;\n\n    if (item.onRender) {\n      // These are the top level items, there is no relevant menu dismissing function to\n      // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\n      return item.onRender(item, () => undefined);\n    }\n    const commandButtonProps: ICommandBarItemProps = {\n      allowDisabledFocus: true,\n      role: 'menuitem',\n      ...item,\n      styles: { root: { height: '100%' }, label: { whiteSpace: 'nowrap' }, ...item.buttonStyles },\n      className: css('ms-CommandBarItem-link', item.className),\n      text: !item.iconOnly ? itemText : undefined,\n      menuProps: item.subMenuProps,\n      onClick: this._onButtonClick(item)\n    };\n\n    if (item.iconOnly && itemText !== undefined) {\n      return (\n        <TooltipHost content={itemText} {...item.tooltipHostProps}>\n          <CommandButtonType {...commandButtonProps as IButtonProps} defaultRender={CommandBarButton} />\n        </TooltipHost>\n      );\n    }\n\n    return <CommandButtonType {...commandButtonProps as IButtonProps} defaultRender={CommandBarButton} />;\n  };\n\n  private _onButtonClick(item: ICommandBarItemProps): (ev: React.MouseEvent<HTMLButtonElement>) => void {\n    return ev => {\n      // inactive is deprecated. remove check in 7.0\n      if (item.inactive) {\n        return;\n      }\n      if (item.onClick) {\n        item.onClick(ev, item);\n      }\n    };\n  }\n\n  private _onRenderOverflowButton = (overflowItems: ICommandBarItemProps[]): JSX.Element => {\n    const {\n      overflowButtonAs: OverflowButtonType = CommandBarButton,\n      overflowButtonProps = {} // assure that props is not empty\n    } = this.props;\n\n    const combinedOverflowItems: ICommandBarItemProps[] = [\n      ...(overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []),\n      ...overflowItems\n    ];\n\n    const overflowProps: IButtonProps = {\n      ...overflowButtonProps,\n      styles: { menuIcon: { fontSize: '17px' }, ...overflowButtonProps.styles },\n      className: css('ms-CommandBar-overflowButton', overflowButtonProps.className),\n      menuProps: { ...overflowButtonProps.menuProps, items: combinedOverflowItems },\n      menuIconProps: { iconName: 'More', ...overflowButtonProps.menuIconProps }\n    };\n\n    return <OverflowButtonType {...overflowProps as IButtonProps} />;\n  };\n\n  private _computeCacheKey(data: ICommandBarData): string {\n    const { primaryItems, farItems = [], overflowItems } = data;\n    const returnKey = (acc: string, current: ICommandBarItemProps): string => {\n      const { cacheKey = current.key } = current;\n      return acc + cacheKey;\n    };\n\n    const primaryKey = primaryItems.reduce(returnKey, '');\n    const farKey = farItems.reduce(returnKey, '');\n    const overflowKey = !!overflowItems.length ? 'overflow' : '';\n\n    return [primaryKey, farKey, overflowKey].join(' ');\n  }\n\n  private _onReduceData = (data: ICommandBarData): ICommandBarData | undefined => {\n    const { shiftOnReduce, onDataReduced } = this.props;\n    let { primaryItems, overflowItems, cacheKey } = data;\n\n    // Use first item if shiftOnReduce, otherwise use last item\n    const movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\n\n    if (movedItem !== undefined) {\n      movedItem.renderedInOverflow = true;\n\n      overflowItems = [movedItem, ...overflowItems];\n      primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\n\n      const newData = { ...data, primaryItems, overflowItems };\n      cacheKey = this._computeCacheKey(newData);\n\n      if (onDataReduced) {\n        onDataReduced(movedItem);\n      }\n\n      newData.cacheKey = cacheKey;\n      return newData;\n    }\n\n    return undefined;\n  };\n\n  private _onGrowData = (data: ICommandBarData): ICommandBarData | undefined => {\n    const { shiftOnReduce, onDataGrown } = this.props;\n    const { minimumOverflowItems } = data;\n    let { primaryItems, overflowItems, cacheKey } = data;\n    const movedItem = overflowItems[0];\n\n    // Make sure that moved item exists and is not one of the original overflow items\n    if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\n      movedItem.renderedInOverflow = false;\n\n      overflowItems = overflowItems.slice(1);\n      // if shiftOnReduce, movedItem goes first, otherwise, last.\n      primaryItems = shiftOnReduce ? [movedItem, ...primaryItems] : [...primaryItems, movedItem];\n\n      const newData = { ...data, primaryItems, overflowItems };\n      cacheKey = this._computeCacheKey(newData);\n\n      if (onDataGrown) {\n        onDataGrown(movedItem);\n      }\n\n      newData.cacheKey = cacheKey;\n      return newData;\n    }\n\n    return undefined;\n  };\n}\n"]}