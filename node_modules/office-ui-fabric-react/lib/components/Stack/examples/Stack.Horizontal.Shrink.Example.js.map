{"version":3,"file":"Stack.Horizontal.Shrink.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Shrink.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,cAAc,EAAE,cAAc,EAAgB,MAAM,EAAE,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAMrG;IAAkD,wDAAkC;IAClF,sCAAY,KAAS;QAArB,YACE,kBAAM,KAAK,CAAC,SAIb;QAoDO,oBAAc,GAAG,UAAC,KAAa;YACrC,KAAI,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QACvC,CAAC,CAAC;QAzDA,KAAI,CAAC,KAAK,GAAG;YACX,UAAU,EAAE,GAAG;SAChB,CAAC;;IACJ,CAAC;IAEM,6CAAM,GAAb;QACE,IAAM,MAAM,GAAG,cAAc,CAAC;YAC5B,IAAI,EAAE;gBACJ,UAAU,EAAE,cAAc,CAAC,aAAa;gBACxC,KAAK,EAAK,IAAI,CAAC,KAAK,CAAC,UAAU,MAAG;gBAClC,QAAQ,EAAE,QAAQ;aACnB;YAED,IAAI,EAAE;gBACJ,MAAM,EAAE,EAAE;gBACV,OAAO,EAAE,MAAM;gBACf,UAAU,EAAE,QAAQ;gBACpB,cAAc,EAAE,QAAQ;gBACxB,KAAK,EAAE,cAAc,CAAC,KAAK;gBAC3B,UAAU,EAAE,cAAc,CAAC,YAAY;gBACvC,QAAQ,EAAE,QAAQ;aACnB;SACF,CAAC,CAAC;QAEH,IAAM,WAAW,GAAiB,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC;QAErD,OAAO,CACL,oBAAC,KAAK,IAAC,MAAM,EAAE,WAAW;YACxB,oBAAC,MAAM,IACL,KAAK,EAAC,uDAAuD,EAC7D,GAAG,EAAE,CAAC,EACN,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,CAAC,EACP,YAAY,EAAE,GAAG,EACjB,SAAS,EAAE,IAAI,EACf,QAAQ,EAAE,IAAI,CAAC,cAAc,GAC7B;YACF,oBAAC,KAAK,IAAC,UAAU,QAAC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI;gBACxE,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,eAE1B;gBACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,eAE1B;gBACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,aAAa,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,qBAE1E;gBACb,oBAAC,KAAK,CAAC,IAAI,IAAC,IAAI,QAAC,SAAS,EAAE,MAAM,CAAC,IAAI,eAE1B,CACP,CACF,CACT,CAAC;IACJ,CAAC;IAKH,mCAAC;AAAD,CAAC,AA7DD,CAAkD,KAAK,CAAC,SAAS,GA6DhE","sourcesContent":["import * as React from 'react';\nimport { mergeStyleSets, DefaultPalette, IStackTokens, Slider, Stack } from 'office-ui-fabric-react';\n\nexport interface IExampleState {\n  stackWidth: number;\n}\n\nexport class HorizontalStackShrinkExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      stackWidth: 100\n    };\n  }\n\n  public render(): JSX.Element {\n    const styles = mergeStyleSets({\n      root: {\n        background: DefaultPalette.themeTertiary,\n        width: `${this.state.stackWidth}%`,\n        overflow: 'hidden'\n      },\n\n      item: {\n        height: 50,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        color: DefaultPalette.white,\n        background: DefaultPalette.themePrimary,\n        overflow: 'hidden'\n      }\n    });\n\n    const stackTokens: IStackTokens = { childrenGap: 5 };\n\n    return (\n      <Stack tokens={stackTokens}>\n        <Slider\n          label=\"Change the stack width to see how child items shrink:\"\n          min={1}\n          max={100}\n          step={1}\n          defaultValue={100}\n          showValue={true}\n          onChange={this._onWidthChange}\n        />\n        <Stack horizontal tokens={stackTokens} padding={10} className={styles.root}>\n          <Stack.Item grow className={styles.item}>\n            I shrink\n          </Stack.Item>\n          <Stack.Item grow className={styles.item}>\n            I shrink\n          </Stack.Item>\n          <Stack.Item grow disableShrink className={styles.item} styles={{ root: { width: 500 } }}>\n            I don't shrink\n          </Stack.Item>\n          <Stack.Item grow className={styles.item}>\n            I shrink\n          </Stack.Item>\n        </Stack>\n      </Stack>\n    );\n  }\n\n  private _onWidthChange = (value: number): void => {\n    this.setState({ stackWidth: value });\n  };\n}\n"]}