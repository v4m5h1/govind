{"version":3,"file":"DetailsRowCheck.js","sourceRoot":"../src/","sources":["components/DetailsList/DetailsRowCheck.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAE/B,6CAA8C;AAC9C,qCAAoC;AAEpC,sDAAoE;AACpE,mEAAqD;AAErD,6CAAqD;AAErD,IAAM,kBAAkB,GAAG,8BAAkB,CAAiC;IAC5E,cAAc,EAAE,IAAI;CACrB,CAAC,CAAC;AACH,IAAM,aAAa,GAAG,8BAAkB,CAAqD;IAC3F,cAAc,EAAE,IAAI;CACrB,CAAC,CAAC;AAEH,IAAM,mBAAmB,GAAG,UAAC,KAA4B;IAErD,IAAA,oBAAiB,EAAjB,sCAAiB,EACjB,oBAAiB,EAAjB,sCAAiB,EACjB,qBAAkB,EAAlB,uCAAkB,EAClB,sBAAmB,EAAnB,wCAAmB,EACnB,mBAAgB,EAAhB,qCAAgB,EAChB,mBAAgB,EAAhB,qCAAgB,EAChB,2BAAS,EACT,qCAAc,EACd,qBAAM,EACN,mBAAK,EACL,uBAAO,EACP,uDAAuB,EACvB,4MAAc,CACN;IAEV,IAAM,SAAS,GAAG,UAAU,IAAI,QAAQ,CAAC;IAEzC,IAAM,WAAW,GAAG,wBAAc,CAAC,EAAE,KAAK,EAAE,KAAM,EAAE,CAAC,CAAC;IAEtD,IAAM,eAAe,GAAG,kBAAkB,CAAC,WAAW,EAAE;QACtD,KAAK,EAAE,KAAM;KACd,CAAC,CAAC;IAEH,IAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE;QACvC,KAAK,EAAE,KAAM;QACb,SAAS,WAAA;QACT,QAAQ,EAAE,SAAS;QACnB,WAAW,aAAA;QACX,SAAS,WAAA;QACT,QAAQ,UAAA;QACR,SAAS,WAAA;QACT,OAAO,SAAA;KACR,CAAC,CAAC;IAEH,IAAM,qBAAqB,GAAG,UAAC,aAAoC;QACjE,OAAO,oBAAC,aAAK,IAAC,OAAO,EAAE,aAAa,CAAC,OAAO,GAAI,CAAC;IACnD,CAAC,CAAC;IAEF,IAAM,oBAAoB,GAA0B;QAClD,OAAO,EAAE,SAAS;KACnB,CAAC;IAEF,OAAO,SAAS,CAAC,CAAC,CAAC,CACjB,gDACM,WAAW,IACf,IAAI,EAAC,UAAU,EACf,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,EAAE,eAAe,CAAC,SAAS,CAAC,kBAC9D,SAAS,2BACA,IAAI,uBACT,iBAAiB,KAElC,uBAAuB;QACtB,CAAC,CAAC,uBAAuB,CAAC,oBAAoB,EAAE,qBAAqB,CAAC;QACtE,CAAC,CAAC,qBAAqB,CAAC,oBAAoB,CAAC,CAC3C,CACP,CAAC,CAAC,CAAC,CACF,gDAAS,WAAW,IAAE,SAAS,EAAE,eAAG,CAAC,UAAU,CAAC,IAAI,EAAE,UAAU,CAAC,KAAK,CAAC,IAAI,CAC5E,CAAC;AACJ,CAAC,CAAC;AAEW,QAAA,eAAe,GAAG,kBAAM,CACnC,mBAAmB,EACnB,kCAAS,EACT,SAAS,EACT,EAAE,KAAK,EAAE,iBAAiB,EAAE,CAC7B,CAAC","sourcesContent":["import * as React from 'react';\nimport { IDetailsRowCheckProps, IDetailsCheckboxProps } from './DetailsRowCheck.types';\nimport { css, styled } from '../../Utilities';\nimport { Check } from '../../Check';\nimport { ICheckStyleProps, ICheckStyles } from '../Check/Check.types';\nimport { getStyles as getCheckStyles } from '../Check/Check.styles';\nimport { getStyles } from './DetailsRowCheck.styles';\nimport { IDetailsRowCheckStyleProps, IDetailsRowCheckStyles } from './DetailsRowCheck.types';\nimport { classNamesFunction } from '../../Utilities';\n\nconst getCheckClassNames = classNamesFunction<ICheckStyleProps, ICheckStyles>({\n  disableCaching: true\n});\nconst getClassNames = classNamesFunction<IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>({\n  disableCaching: true\n});\n\nconst DetailsRowCheckBase = (props: IDetailsRowCheckProps) => {\n  const {\n    isVisible = false,\n    canSelect = false,\n    isSelected = false,\n    anySelected = false,\n    selected = false,\n    isHeader = false,\n    className,\n    checkClassName,\n    styles,\n    theme,\n    compact,\n    onRenderDetailsCheckbox,\n    ...buttonProps\n  } = props;\n\n  const isPressed = isSelected || selected;\n\n  const checkStyles = getCheckStyles({ theme: theme! });\n\n  const checkClassNames = getCheckClassNames(checkStyles, {\n    theme: theme!\n  });\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    canSelect,\n    selected: isPressed,\n    anySelected,\n    className,\n    isHeader,\n    isVisible,\n    compact\n  });\n\n  const defaultCheckboxRender = (checkboxProps: IDetailsCheckboxProps) => {\n    return <Check checked={checkboxProps.checked} />;\n  };\n\n  const detailsCheckboxProps: IDetailsCheckboxProps = {\n    checked: isPressed\n  };\n\n  return canSelect ? (\n    <div\n      {...buttonProps}\n      role=\"checkbox\"\n      className={css(classNames.root, classNames.check, checkClassNames.checkHost)}\n      aria-checked={isPressed}\n      data-selection-toggle={true}\n      data-automationid=\"DetailsRowCheck\"\n    >\n      {onRenderDetailsCheckbox\n        ? onRenderDetailsCheckbox(detailsCheckboxProps, defaultCheckboxRender)\n        : defaultCheckboxRender(detailsCheckboxProps)}\n    </div>\n  ) : (\n    <div {...buttonProps} className={css(classNames.root, classNames.check)} />\n  );\n};\n\nexport const DetailsRowCheck = styled<IDetailsRowCheckProps, IDetailsRowCheckStyleProps, IDetailsRowCheckStyles>(\n  DetailsRowCheckBase,\n  getStyles,\n  undefined,\n  { scope: 'DetailsRowCheck' }\n);\n"]}