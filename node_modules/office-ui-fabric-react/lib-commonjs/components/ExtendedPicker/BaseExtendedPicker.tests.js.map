{"version":3,"file":"BaseExtendedPicker.tests.js","sourceRoot":"../src/","sources":["components/ExtendedPicker/BaseExtendedPicker.tests.tsx"],"names":[],"mappings":"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","sourcesContent":["/* tslint:disable:no-unused-variable */\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as ReactTestUtils from 'react-dom/test-utils';\n/* tslint:enable:no-unused-variable */\nimport * as renderer from 'react-test-renderer';\n\nimport { IBaseExtendedPickerProps } from './BaseExtendedPicker.types';\nimport { BaseExtendedPicker } from './BaseExtendedPicker';\nimport { IBaseFloatingPickerProps, BaseFloatingPicker, SuggestionsStore } from '../FloatingPicker/index';\nimport { IBaseSelectedItemsListProps, ISelectedItemProps, BaseSelectedItemsList } from '../SelectedItemsList/index';\nimport { KeyCodes } from '../../Utilities';\n\nfunction onResolveSuggestions(text: string): ISimple[] {\n  return [\n    'black',\n    'blue',\n    'brown',\n    'cyan',\n    'green',\n    'magenta',\n    'mauve',\n    'orange',\n    'pink',\n    'purple',\n    'red',\n    'rose',\n    'violet',\n    'white',\n    'yellow'\n  ]\n    .filter((tag: string) => tag.toLowerCase().indexOf(text.toLowerCase()) === 0)\n    .map((item: string) => ({ key: item, name: item }));\n}\n\nconst BasePickerWithType = BaseFloatingPicker as new (props: IBaseFloatingPickerProps<ISimple>) => BaseFloatingPicker<\n  ISimple,\n  IBaseFloatingPickerProps<ISimple>\n>;\n\nconst BaseSelectedItemsListWithType = BaseSelectedItemsList as new (props: IBaseSelectedItemsListProps<ISimple>) => BaseSelectedItemsList<\n  ISimple,\n  IBaseSelectedItemsListProps<ISimple>\n>;\n\nconst basicSuggestionRenderer = (props: ISimple) => {\n  return <div> {props.name} </div>;\n};\n\nconst basicItemRenderer = (props: ISelectedItemProps<ISimple>) => {\n  return <div> {props.name} </div>;\n};\n\nconst basicRenderFloatingPicker = (props: IBaseFloatingPickerProps<ISimple>) => {\n  return <BasePickerWithType {...props} />;\n};\n\nconst basicRenderSelectedItemsList = (props: IBaseSelectedItemsListProps<ISimple>) => {\n  return <BaseSelectedItemsListWithType />;\n};\n\nconst floatingPickerProps = {\n  onResolveSuggestions: onResolveSuggestions,\n  onRenderSuggestionsItem: basicSuggestionRenderer,\n  suggestionsStore: new SuggestionsStore<ISimple>()\n};\n\nconst selectedItemsListProps: IBaseSelectedItemsListProps<ISimple> = {\n  onRenderItem: basicItemRenderer\n};\n\nexport interface ISimple {\n  key: string;\n  name: string;\n}\n\nexport type TypedBaseExtendedPicker = BaseExtendedPicker<ISimple, IBaseExtendedPickerProps<ISimple>>;\n\ndescribe('Pickers', () => {\n  describe('BasePicker', () => {\n    const BaseExtendedPickerWithType = BaseExtendedPicker as new (props: IBaseExtendedPickerProps<ISimple>) => BaseExtendedPicker<\n      ISimple,\n      IBaseExtendedPickerProps<ISimple>\n    >;\n\n    it('renders BaseExtendedPicker correctly', () => {\n      const component = renderer.create(\n        <BaseExtendedPickerWithType\n          floatingPickerProps={floatingPickerProps}\n          selectedItemsListProps={selectedItemsListProps}\n          onRenderSelectedItems={basicRenderSelectedItemsList}\n          onRenderFloatingPicker={basicRenderFloatingPicker}\n        />\n      );\n      const tree = component.toJSON();\n      expect(tree).toMatchSnapshot();\n    });\n\n    it('force resolves to the first suggestion', () => {\n      const root = document.createElement('div');\n      document.body.appendChild(root);\n\n      const picker: TypedBaseExtendedPicker = ReactDOM.render(\n        <BaseExtendedPickerWithType\n          floatingPickerProps={floatingPickerProps}\n          selectedItemsListProps={selectedItemsListProps}\n          onRenderSelectedItems={basicRenderSelectedItemsList}\n          onRenderFloatingPicker={basicRenderFloatingPicker}\n        />,\n        root\n      ) as TypedBaseExtendedPicker;\n\n      if (picker.inputElement) {\n        picker.inputElement.value = 'bl';\n      }\n\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.suggestions.length).toBe(2);\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.suggestions[0].name).toBe('black');\n\n      // Force resolve to the first suggestions\n      picker.floatingPicker.current && picker.floatingPicker.current.forceResolveSuggestion();\n      expect(picker.items.length).toBe(1);\n      expect(picker.items[0].name).toBe('black');\n\n      ReactDOM.unmountComponentAtNode(root);\n    });\n\n    it('Can hide and show picker', () => {\n      const root = document.createElement('div');\n      document.body.appendChild(root);\n\n      const picker: TypedBaseExtendedPicker = ReactDOM.render(\n        <BaseExtendedPickerWithType\n          floatingPickerProps={floatingPickerProps}\n          selectedItemsListProps={selectedItemsListProps}\n          onRenderSelectedItems={basicRenderSelectedItemsList}\n          onRenderFloatingPicker={basicRenderFloatingPicker}\n        />,\n        root\n      ) as TypedBaseExtendedPicker;\n\n      if (picker.inputElement) {\n        picker.inputElement.value = 'bl';\n      }\n\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.isSuggestionsShown).toBeTruthy();\n      picker.floatingPicker.current && picker.floatingPicker.current.hidePicker();\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.isSuggestionsShown).toBeFalsy();\n      picker.floatingPicker.current && picker.floatingPicker.current.showPicker();\n      expect(picker.floatingPicker.current && picker.floatingPicker.current.isSuggestionsShown).toBeTruthy();\n\n      ReactDOM.unmountComponentAtNode(root);\n    });\n\n    it('Completes the suggestion', () => {\n      const root = document.createElement('div');\n      document.body.appendChild(root);\n\n      const picker: TypedBaseExtendedPicker = ReactDOM.render(\n        <BaseExtendedPickerWithType\n          floatingPickerProps={floatingPickerProps}\n          selectedItemsListProps={selectedItemsListProps}\n          onRenderSelectedItems={basicRenderSelectedItemsList}\n          onRenderFloatingPicker={basicRenderFloatingPicker}\n        />,\n        root\n      ) as TypedBaseExtendedPicker;\n\n      if (picker.inputElement) {\n        picker.inputElement.value = 'bl';\n        ReactTestUtils.Simulate.keyDown(picker.inputElement, { which: KeyCodes.down });\n      }\n\n      picker.floatingPicker.current && picker.floatingPicker.current.completeSuggestion();\n      expect(picker.selectedItemsList.current && picker.selectedItemsList.current.items.length).toBe(1);\n      expect(picker.selectedItemsList.current && picker.selectedItemsList.current.items[0].name).toBe('blue');\n\n      ReactDOM.unmountComponentAtNode(root);\n    });\n  });\n});\n"]}