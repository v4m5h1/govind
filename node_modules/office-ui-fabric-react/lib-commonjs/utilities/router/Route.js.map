{"version":3,"file":"Route.js","sourceRoot":"../src/","sources":["utilities/router/Route.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAyB/B;IAA2B,iCAAgC;IAA3D;;IAA6D,CAAC;IAAD,YAAC;AAAD,CAAC,AAA9D,CAA2B,KAAK,CAAC,aAAa,GAAgB;AAAjD,sBAAK","sourcesContent":["import * as React from 'react';\n\n/** A component function which doesn't explicitly declare itself as React.StatelessComponent/SFC/FunctionComponent */\nexport type ComponentLike<P = {}> = React.ComponentClass<P> | ((props?: P) => React.ReactElement<P> | null);\n// ^^ This is needed so we don't break consumers who may not explicitly declare their\n// functional components as one of React's functional component types.\n\nexport interface IRouteProps extends React.ClassAttributes<Route> {\n  path?: string;\n\n  children?: React.ReactNode;\n\n  /**\n   * The component to render for this route's content (or a loading placeholder if `getComponent` is provided).\n   */\n  component?: ComponentLike;\n\n  /**\n   * Function that loads the component asynchronously.\n   * Notify when loading has finished using `cb`.\n   * If `component` is provided, it will be rendered while waiting for the callback.\n   */\n  getComponent?: (cb: (component: ComponentLike) => void) => void;\n}\n\nexport class Route extends React.PureComponent<IRouteProps> {}\n"]}