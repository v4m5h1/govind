import * as tslib_1 from "tslib";
import * as React from 'react';
import { mergeStyleSets, DefaultPalette, Stack } from 'office-ui-fabric-react';
var HorizontalStackHorizontalAlignExample = /** @class */ (function (_super) {
    tslib_1.__extends(HorizontalStackHorizontalAlignExample, _super);
    function HorizontalStackHorizontalAlignExample() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HorizontalStackHorizontalAlignExample.prototype.render = function () {
        var styles = mergeStyleSets({
            root: {
                background: DefaultPalette.themeTertiary
            },
            item: {
                width: 50,
                height: 50,
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                background: DefaultPalette.themePrimary,
                color: DefaultPalette.white
            }
        });
        var stackTokens = { childrenGap: 5 };
        return (React.createElement(Stack, { tokens: stackTokens },
            React.createElement("span", null, "Left-aligned"),
            React.createElement(Stack, { horizontal: true, horizontalAlign: "start", className: styles.root },
                React.createElement("span", { className: styles.item }, "1"),
                React.createElement("span", { className: styles.item }, "2"),
                React.createElement("span", { className: styles.item }, "3")),
            React.createElement("span", null, "Horizontally centered"),
            React.createElement(Stack, { horizontal: true, horizontalAlign: "center", className: styles.root },
                React.createElement("span", { className: styles.item }, "1"),
                React.createElement("span", { className: styles.item }, "2"),
                React.createElement("span", { className: styles.item }, "3")),
            React.createElement("span", null, "Right-aligned"),
            React.createElement(Stack, { horizontal: true, horizontalAlign: "end", className: styles.root },
                React.createElement("span", { className: styles.item }, "1"),
                React.createElement("span", { className: styles.item }, "2"),
                React.createElement("span", { className: styles.item }, "3")),
            React.createElement("span", null, "Horizontal space around items"),
            React.createElement(Stack, { horizontal: true, horizontalAlign: "space-around", className: styles.root },
                React.createElement("span", { className: styles.item }, "1"),
                React.createElement("span", { className: styles.item }, "2"),
                React.createElement("span", { className: styles.item }, "3")),
            React.createElement("span", null, "Horizontal space between items"),
            React.createElement(Stack, { horizontal: true, horizontalAlign: "space-between", className: styles.root },
                React.createElement("span", { className: styles.item }, "1"),
                React.createElement("span", { className: styles.item }, "2"),
                React.createElement("span", { className: styles.item }, "3")),
            React.createElement("span", null, "Items horizontally evenly spaced"),
            React.createElement(Stack, { horizontal: true, horizontalAlign: "space-evenly", className: styles.root },
                React.createElement("span", { className: styles.item }, "1"),
                React.createElement("span", { className: styles.item }, "2"),
                React.createElement("span", { className: styles.item }, "3"))));
    };
    return HorizontalStackHorizontalAlignExample;
}(React.Component));
export { HorizontalStackHorizontalAlignExample };
//# sourceMappingURL=Stack.Horizontal.HorizontalAlign.Example.js.map