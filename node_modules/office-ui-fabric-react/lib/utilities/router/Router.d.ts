/// <reference types="react" />
import * as React from 'react';
export interface IRouterProps {
    /**
     * Gets the component ref.
     */
    componentRef?: () => void;
    replaceState?: boolean;
    children?: React.ReactNode;
    onNewRouteLoaded?: () => void;
}
export interface IRouterState {
    path: string;
}
export declare class Router extends React.Component<IRouterProps, IRouterState> {
    private _disposables;
    constructor(props: IRouterProps);
    componentDidMount(): void;
    componentWillUnmount(): void;
    render(): React.ReactElement<any> | null;
    private _getPath();
    private _resolveRoute(children?);
}
