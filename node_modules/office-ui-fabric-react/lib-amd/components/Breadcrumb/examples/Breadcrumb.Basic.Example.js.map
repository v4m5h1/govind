{"version":3,"file":"Breadcrumb.Basic.Example.js","sourceRoot":"../src/","sources":["components/Breadcrumb/examples/Breadcrumb.Basic.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Breadcrumb, IBreadcrumbItem, IDividerAsProps } from 'office-ui-fabric-react/lib/Breadcrumb';\nimport { Label } from 'office-ui-fabric-react/lib/Label';\nimport * as exampleStylesImport from '../../../common/_exampleStyles.scss';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nconst exampleStyles: any = exampleStylesImport;\n\nexport class BreadcrumbBasicExample extends React.Component<any, any> {\n  constructor(props: {}) {\n    super(props);\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <Label className={exampleStyles.exampleLabel}>With no maxDisplayedItems</Label>\n        <Breadcrumb\n          items={[\n            { text: 'Files', key: 'Files', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 1', key: 'f1', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 2 with a long name', key: 'f2', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 3 long', key: 'f3', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 4', key: 'f4', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 5 another', key: 'f5', onClick: this._onBreadcrumbItemClicked, isCurrentItem: true }\n          ]}\n          ariaLabel={'Breadcrumb with no maxDisplayedItems'}\n        />\n\n        <Label className={exampleStyles.exampleLabel} style={{ marginTop: '24px' }}>\n          With Custom Divider Icon\n        </Label>\n        <Breadcrumb\n          items={[\n            { text: 'Files', key: 'Files', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 1', key: 'f1', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 2', key: 'f2', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 3', key: 'f3', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 4', key: 'f4', onClick: this._onBreadcrumbItemClicked },\n            { text: 'This is folder 5', key: 'f5', onClick: this._onBreadcrumbItemClicked, isCurrentItem: true }\n          ]}\n          dividerAs={this._getCustomDivider}\n          ariaLabel={'Breadcrumb with custom divider icon'}\n        />\n\n        <Label className={exampleStyles.exampleLabel} style={{ marginTop: '24px' }}>\n          With maxDisplayedItems set to three\n        </Label>\n        <Breadcrumb\n          items={[\n            { text: 'Files', key: 'Files', href: '#/examples/breadcrumb', onClick: this._onBreadcrumbItemClicked },\n            {\n              text: 'This is link 1',\n              key: 'l1',\n              href: '#/examples/breadcrumb',\n              onClick: this._onBreadcrumbItemClicked\n            },\n            {\n              text: 'This is link 2',\n              key: 'l2',\n              href: '#/examples/breadcrumb',\n              onClick: this._onBreadcrumbItemClicked\n            },\n            {\n              text: 'This is link 3 with a long name',\n              key: 'l3',\n              href: '#/examples/breadcrumb',\n              onClick: this._onBreadcrumbItemClicked\n            },\n            {\n              text: 'This is link 4',\n              key: 'l4',\n              href: '#/examples/breadcrumb',\n              onClick: this._onBreadcrumbItemClicked\n            },\n            {\n              text: 'This is link 5',\n              key: 'l5',\n              href: '#/examples/breadcrumb',\n              onClick: this._onBreadcrumbItemClicked,\n              isCurrentItem: true\n            }\n          ]}\n          maxDisplayedItems={3}\n          ariaLabel={'Breadcrumb with maxDisplayedItems set to three'}\n          overflowAriaLabel={'More links'}\n        />\n\n        <Label className={exampleStyles.exampleLabel} style={{ marginTop: '24px' }}>\n          With maxDisplayedItems set to two and overflowIndex set to 1 (second element)\n        </Label>\n        <Breadcrumb\n          items={[\n            { text: 'TestText1', key: 'TestKey1' },\n            { text: 'TestText2', key: 'TestKey2' },\n            { text: 'TestText3', key: 'TestKey3' },\n            { text: 'TestText4', key: 'TestKey4' }\n          ]}\n          maxDisplayedItems={2}\n          overflowIndex={1}\n          overflowAriaLabel={'More items'}\n          ariaLabel={'Breadcrumb with maxDisplayedItems set to two and overflowIndex set to 1'}\n        />\n      </div>\n    );\n  }\n\n  private _onBreadcrumbItemClicked = (ev: React.MouseEvent<HTMLElement>, item: IBreadcrumbItem): void => {\n    console.log(`Breadcrumb item with key \"${item.key}\" has been clicked.`);\n  };\n\n  private _getCustomDivider = (dividerProps: IDividerAsProps): JSX.Element => {\n    const tooltipText = dividerProps.item ? dividerProps.item.text : '';\n    return (\n      <TooltipHost content={`Show ${tooltipText} contents`} calloutProps={{ gapSpace: 0 }}>\n        <span aria-hidden=\"true\" style={{ cursor: 'pointer' }}>\n          /\n        </span>\n      </TooltipHost>\n    );\n  };\n}\n"]}