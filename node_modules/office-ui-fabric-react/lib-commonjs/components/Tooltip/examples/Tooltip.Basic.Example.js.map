{"version":3,"file":"Tooltip.Basic.Example.js","sourceRoot":"../src/","sources":["components/Tooltip/examples/Tooltip.Basic.Example.tsx"],"names":[],"mappings":";;;AAAA,6BAA+B;AAC/B,4DAAkE;AAClE,8DAAiE;AACjE,kEAA6D;AAE7D;IAAyC,+CAAyB;IAAlE;QAAA,qEAcC;QAbC,2DAA2D;QAC3D,yFAAyF;QACjF,aAAO,GAAW,iBAAK,CAAC,aAAa,CAAC,CAAC;;IAWjD,CAAC;IATQ,oCAAM,GAAb;QACE,OAAO,CACL;YACE,oBAAC,qBAAW,IAAC,OAAO,EAAC,qBAAqB,EAAC,EAAE,EAAE,IAAI,CAAC,OAAO,EAAE,YAAY,EAAE,EAAE,QAAQ,EAAE,CAAC,EAAE;gBACxF,oBAAC,sBAAa,uBAAkB,IAAI,CAAC,OAAO,oBAA+B,CAC/D,CACV,CACP,CAAC;IACJ,CAAC;IACH,0BAAC;AAAD,CAAC,AAdD,CAAyC,KAAK,CAAC,SAAS,GAcvD;AAdY,kDAAmB","sourcesContent":["import * as React from 'react';\nimport { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport { TooltipHost } from 'office-ui-fabric-react/lib/Tooltip';\nimport { getId } from 'office-ui-fabric-react/lib/Utilities';\n\nexport class TooltipBasicExample extends React.Component<any, any> {\n  // Use getId() to ensure that the ID is unique on the page.\n  // (It's also okay to use a plain string without getId() and manually ensure uniqueness.)\n  private _hostId: string = getId('tooltipHost');\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <TooltipHost content=\"This is the tooltip\" id={this._hostId} calloutProps={{ gapSpace: 0 }}>\n          <DefaultButton aria-labelledby={this._hostId}>Hover Over Me</DefaultButton>\n        </TooltipHost>\n      </div>\n    );\n  }\n}\n"]}