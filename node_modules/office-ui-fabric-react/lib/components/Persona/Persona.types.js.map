{"version":3,"file":"Persona.types.js","sourceRoot":"../src/","sources":["components/Persona/Persona.types.ts"],"names":[],"mappings":"AAoVA;;GAEG;AACH,MAAM,CAAN,IAAY,WA8CX;AA9CD,WAAY,WAAW;IACrB;;;OAGG;IACH,6CAAQ,CAAA;IACR;;;;OAIG;IACH,mEAAmB,CAAA;IACnB;;;OAGG;IACH,yDAAc,CAAA;IACd;;;OAGG;IACH,+CAAS,CAAA;IACT;;;OAGG;IACH,mDAAW,CAAA;IACX;;;OAGG;IACH,+CAAS,CAAA;IACT;;;OAGG;IACH,yDAAc,CAAA;IACd,iDAAU,CAAA;IACV,iDAAU,CAAA;IACV,iDAAU,CAAA;IACV,kDAAW,CAAA;IACX,kDAAW,CAAA;IACX,kDAAW,CAAA;IACX,kDAAW,CAAA;IACX,kDAAW,CAAA;IACX,oDAAY,CAAA;AACd,CAAC,EA9CW,WAAW,KAAX,WAAW,QA8CtB;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,eAQX;AARD,WAAY,eAAe;IACzB,qDAAQ,CAAA;IACR,2DAAW,CAAA;IACX,yDAAU,CAAA;IACV,qDAAQ,CAAA;IACR,mDAAO,CAAA;IACP,2DAAW,CAAA;IACX,qDAAQ,CAAA;AACV,CAAC,EARW,eAAe,KAAf,eAAe,QAQ1B;AAED;;GAEG;AACH,MAAM,CAAN,IAAY,oBA4BX;AA5BD,WAAY,oBAAoB;IAC9B,yEAAa,CAAA;IACb,+DAAQ,CAAA;IACR,uEAAY,CAAA;IACZ,+DAAQ,CAAA;IACR,2EAAc,CAAA;IACd,iEAAS,CAAA;IACT,yEAAa,CAAA;IACb,yEAAa,CAAA;IACb,+DAAQ,CAAA;IACR,qEAAW,CAAA;IACX,oEAAW,CAAA;IACX;;OAEG;IACH,kEAAU,CAAA;IACV,oEAAW,CAAA;IACX;;OAEG;IACH,8DAAQ,CAAA;IACR,sEAAY,CAAA;IACZ;;;OAGG;IACH,8EAAgB,CAAA;IAChB,oEAAW,CAAA;AACb,CAAC,EA5BW,oBAAoB,KAApB,oBAAoB,QA4B/B","sourcesContent":["import * as React from 'react';\nimport { IRefObject, IRenderFunction } from '../../Utilities';\nimport { PersonaBase } from './Persona.base';\nimport { ImageLoadState } from '../../Image';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IStyleFunctionOrObject } from '../../Utilities';\nimport { PersonaCoinBase } from './PersonaCoin/PersonaCoin.base';\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersona {}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaSharedProps extends React.HTMLAttributes<PersonaBase | PersonaCoinBase | HTMLDivElement> {\n  /**\n   * Primary text to display, usually the name of the person.\n   */\n  text?: string;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Optional custom renderer for the coin\n   */\n  onRenderCoin?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * If true, adds the css class 'is-fadeIn' to the image.\n   */\n  imageShouldFadeIn?: boolean;\n\n  /**\n   * If true, the image starts as visible and is hidden on error. Otherwise, the image is hidden until\n   * it is successfully loaded. This disables imageShouldFadeIn.\n   * @defaultvalue false\n   */\n  imageShouldStartVisible?: boolean;\n\n  /**\n   * Url to the image to use, should be a square aspect ratio and big enough to fit in the image area.\n   */\n  imageUrl?: string;\n\n  /**\n   * Alt text for the image to use. Defaults to an empty string.\n   */\n  imageAlt?: string;\n\n  /**\n   * The user's initials to display in the image area when there is no image.\n   * @defaultvalue [Derived from text]\n   */\n  imageInitials?: string;\n\n  /**\n   * Whether initials are calculated for phone numbers and number sequences.\n   * Example: Set property to true to get initials for project names consisting of numbers only.\n   * @defaultvalue false\n   */\n  allowPhoneInitials?: boolean;\n\n  /**\n   * Optional custom renderer for the initials\n   */\n  onRenderInitials?: IRenderFunction<IPersonaSharedProps>;\n\n  /**\n   * Optional callback for when loading state of the photo changes\n   */\n  onPhotoLoadingStateChange?: (newImageLoadState: ImageLoadState) => void;\n\n  /**\n   * The background color when the user's initials are displayed.\n   * @defaultvalue [Derived from text]\n   */\n  initialsColor?: PersonaInitialsColor | string;\n\n  /**\n   * Presence of the person to display - will not display presence if undefined.\n   * @defaultvalue PersonaPresence.none\n   */\n  presence?: PersonaPresence;\n\n  /**\n   * This flag can be used to signal the persona is out of office.\n   * This will change the way the presence icon looks for statuses that support dual-presence.\n   */\n  isOutOfOffice?: boolean;\n\n  /**\n   * Secondary text to display, usually the role of the user.\n   */\n  secondaryText?: string;\n\n  /**\n   * Tertiary text to display, usually the status of the user. The tertiary text will only be shown when using Size72 or Size100.\n   */\n  tertiaryText?: string;\n\n  /**\n   * Optional text to display, usually a custom message set. The optional text will only be shown when using Size100.\n   */\n  optionalText?: string;\n\n  /**\n   * Whether to not render persona details, and just render the persona image/initials.\n   */\n  hidePersonaDetails?: boolean;\n\n  /*\n   * If true, show the secondary text line regardless of the size of the persona\n   */\n  showSecondaryText?: boolean;\n\n  /**\n   * If true, show the special coin for unknown persona.\n   * It has '?' in place of initials, with static font and background colors\n   */\n  showUnknownPersonaCoin?: boolean;\n\n  /**\n   * If true renders the initials while the image is loading.\n   * This only applies when an imageUrl is provided.\n   * @defaultvalue false\n   */\n  showInitialsUntilImageLoads?: boolean;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Optional HTML element props for Persona coin.\n   */\n  coinProps?: IPersonaCoinProps;\n\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme?: ITheme;\n\n  /**\n   * Primary text to display, usually the name of the person.\n   * @deprecated Use `text` instead.\n   */\n  primaryText?: string;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaProps extends IPersonaSharedProps {\n  /**\n   * Optional callback to access the IPersona interface. Use this instead of ref for accessing\n   * the public methods and properties of the component.\n   */\n  componentRef?: IRefObject<IPersona>;\n\n  /**\n   * Additional CSS class(es) to apply to the Persona\n   */\n  className?: string;\n\n  /**\n   * Call to provide customized styling that will layer on top of variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaStyleProps, IPersonaStyles>;\n\n  /**\n   * Optional custom renderer for the primary text.\n   */\n  onRenderPrimaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the secondary text.\n   */\n  onRenderSecondaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the tertiary text.\n   */\n  onRenderTertiaryText?: IRenderFunction<IPersonaProps>;\n\n  /**\n   * Optional custom renderer for the optional text.\n   */\n  onRenderOptionalText?: IRenderFunction<IPersonaProps>;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Custom class name.\n   */\n  className?: string;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Presence of the person to display - will not display presence if undefined.\n   * @defaultvalue PersonaPresence.none\n   */\n  presence?: PersonaPresence;\n\n  /*\n   * If true, show the secondary text line regardless of the size of the persona\n   */\n  showSecondaryText?: boolean;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaStyles {\n  root: IStyle;\n  details: IStyle;\n  primaryText: IStyle;\n  secondaryText: IStyle;\n  tertiaryText: IStyle;\n  optionalText: IStyle;\n  textContent: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinProps extends IPersonaSharedProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaCoinStyleProps, IPersonaCoinStyles>;\n\n  /**\n   * Additional css class to apply to the PersonaCoin\n   * @defaultvalue undefined\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinStyleProps {\n  /**\n   * Theme provided by High-Order Component.\n   */\n  theme: ITheme;\n\n  /**\n   * Custom class name.\n   */\n  className?: string;\n\n  /**\n   * Decides the size of the control.\n   * @defaultvalue PersonaSize.size48\n   */\n  size?: PersonaSize;\n\n  /**\n   * Optional custom persona coin size in pixel.\n   */\n  coinSize?: number;\n\n  /**\n   * Decides whether to display coin for unknown persona\n   */\n  showUnknownPersonaCoin?: boolean;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaCoinStyles {\n  coin: IStyle;\n  imageArea: IStyle;\n  image: IStyle;\n  initials: IStyle;\n  size10WithoutPresenceIcon: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaPresenceProps extends IPersonaSharedProps {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<{}>;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<IPersonaPresenceStyleProps, IPersonaPresenceStyles>;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport type IPersonaPresenceStyleProps = Required<Pick<IPersonaSharedProps, 'theme'>> &\n  Pick<IPersonaSharedProps, 'presence' | 'isOutOfOffice' | 'size'> &\n  Pick<IPersonaProps, 'className'>;\n\n/**\n * {@docCategory Persona}\n */\nexport interface IPersonaPresenceStyles {\n  presence: IStyle;\n  presenceIcon: IStyle;\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaSize {\n  /**\n   * tiny size has been deprecated in favor of standardized numeric sizing. Use `size10` instead.\n   * @deprecated Use `size10` instead.\n   */\n  tiny = 0,\n  /**\n   *\n   * extraExtraSmall size has been deprecated in favor of standardized numeric sizing. Use `size24` instead.\n   * @deprecated Use `size24` instead.\n   */\n  extraExtraSmall = 1,\n  /**\n   * extraSmall size has been deprecated in favor of standardized numeric sizing. Use `size32` instead.\n   * @deprecated Use `size32` instead.\n   */\n  extraSmall = 2,\n  /**\n   * small size has been deprecated in favor of standardized numeric sizing. Use `size40` instead.\n   * @deprecated Use `size40` instead.\n   */\n  small = 3,\n  /**\n   * regular size has been deprecated in favor of standardized numeric sizing. Use `size48` instead.\n   * @deprecated Use `size48` instead.\n   */\n  regular = 4,\n  /**\n   * large size has been deprecated in favor of standardized numeric sizing. Use `size72` instead.\n   * @deprecated Use `size72` instead.\n   */\n  large = 5,\n  /**\n   * extraLarge size has been deprecated in favor of standardized numeric sizing. Use `size100` instead.\n   * @deprecated Use `size100` instead.\n   */\n  extraLarge = 6,\n  size28 = 7,\n  size16 = 8,\n  size10 = 9,\n  size24 = 10,\n  size32 = 11,\n  size40 = 12,\n  size48 = 13,\n  size72 = 14,\n  size100 = 15\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaPresence {\n  none = 0,\n  offline = 1,\n  online = 2,\n  away = 3,\n  dnd = 4,\n  blocked = 5,\n  busy = 6\n}\n\n/**\n * {@docCategory Persona}\n */\nexport enum PersonaInitialsColor {\n  lightBlue = 0,\n  blue = 1,\n  darkBlue = 2,\n  teal = 3,\n  lightGreen = 4,\n  green = 5,\n  darkGreen = 6,\n  lightPink = 7,\n  pink = 8,\n  magenta = 9,\n  purple = 10,\n  /**\n   * Black is a color that can result in offensive persona coins with some initials combinations, so it can only be set with overrides\n   */\n  black = 11,\n  orange = 12,\n  /**\n   * Red is a color that often has a special meaning, so it is considered a reserved color and can only be set with overrides\n   */\n  red = 13,\n  darkRed = 14,\n  /**\n   * Transparent is not intended to be used with typical initials due to accessibility issues.\n   * Its primary use is for overflow buttons, so it is considered a reserved color and can only be set with overrides.\n   */\n  transparent = 15,\n  violet = 16\n}\n"]}