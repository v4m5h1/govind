{"version":3,"file":"ChoiceGroupOption.base.js","sourceRoot":"../src/","sources":["components/ChoiceGroup/ChoiceGroupOption/ChoiceGroupOption.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Image } from '../../../Image';\nimport { Icon } from '../../../Icon';\nimport { IChoiceGroupOptionProps, IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles } from './ChoiceGroupOption.types';\nimport { classNamesFunction, getNativeProps, inputProperties, css } from '../../../Utilities';\nimport { IProcessedStyleSet } from '../../../Styling';\n\nconst getClassNames = classNamesFunction<IChoiceGroupOptionStyleProps, IChoiceGroupOptionStyles>();\n\n/**\n * {@docCategory ChoiceGroup}\n */\nexport class ChoiceGroupOptionBase extends React.Component<IChoiceGroupOptionProps, any> {\n  private _inputElement = React.createRef<HTMLInputElement>();\n  private _classNames: IProcessedStyleSet<IChoiceGroupOptionStyles>;\n\n  public render(): JSX.Element {\n    const {\n      ariaLabel,\n      focused,\n      required,\n      theme,\n      iconProps,\n      imageSrc,\n      imageSize = { width: 32, height: 32 },\n      disabled,\n      checked,\n      id,\n      styles,\n      name,\n      onRenderField = this._onRenderField,\n      ...rest\n    } = this.props;\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      hasIcon: !!iconProps,\n      hasImage: !!imageSrc,\n      checked,\n      disabled,\n      imageIsLarge: !!imageSrc && (imageSize.width > 71 || imageSize.height > 71),\n      focused\n    });\n\n    const { className, ...nativeProps } = getNativeProps<{ className: string }>(rest, inputProperties);\n\n    return (\n      <div className={this._classNames.root}>\n        <div className={this._classNames.choiceFieldWrapper}>\n          <input\n            aria-label={ariaLabel ? ariaLabel : undefined}\n            ref={this._inputElement}\n            id={id}\n            className={css(this._classNames.input, className)}\n            type=\"radio\"\n            name={name}\n            disabled={disabled}\n            checked={checked}\n            required={required}\n            onChange={this._onChange.bind(this, this.props)}\n            onFocus={this._onFocus.bind(this, this.props)}\n            onBlur={this._onBlur.bind(this, this.props)}\n            {...nativeProps}\n          />\n          {onRenderField(this.props, this._onRenderField)}\n        </div>\n      </div>\n    );\n  }\n\n  private _onChange(props: IChoiceGroupOptionProps, evt: React.FormEvent<HTMLInputElement>): void {\n    const { onChange } = props;\n    if (onChange) {\n      onChange(evt, props);\n    }\n  }\n\n  private _onBlur(props: IChoiceGroupOptionProps, evt: React.FocusEvent<HTMLElement>) {\n    const { onBlur } = props;\n    if (onBlur) {\n      onBlur(evt, props);\n    }\n  }\n\n  private _onFocus(props: IChoiceGroupOptionProps, evt: React.FocusEvent<HTMLElement>) {\n    const { onFocus } = props;\n    if (onFocus) {\n      onFocus(evt, props);\n    }\n  }\n\n  private _onRenderField = (props: IChoiceGroupOptionProps): JSX.Element => {\n    const { onRenderLabel = this._onRenderLabel, id, imageSrc, imageAlt, selectedImageSrc, iconProps } = props;\n\n    const imageSize = props.imageSize ? props.imageSize : { width: 32, height: 32 };\n\n    return (\n      <label htmlFor={id} className={this._classNames.field}>\n        {imageSrc && (\n          <div className={this._classNames.innerField} style={{ height: imageSize.height, width: imageSize.width }}>\n            <div className={this._classNames.imageWrapper}>\n              <Image src={imageSrc} alt={imageAlt ? imageAlt : ''} width={imageSize.width} height={imageSize.height} />\n            </div>\n            <div className={this._classNames.selectedImageWrapper}>\n              <Image src={selectedImageSrc} alt={imageAlt ? imageAlt : ''} width={imageSize.width} height={imageSize.height} />\n            </div>\n          </div>\n        )}\n        {iconProps ? (\n          <div className={this._classNames.innerField}>\n            <div className={this._classNames.iconWrapper}>\n              <Icon {...iconProps} />\n            </div>\n          </div>\n        ) : null}\n        {imageSrc || iconProps ? (\n          <div className={this._classNames.labelWrapper} style={{ maxWidth: imageSize.width * 2 }}>\n            {onRenderLabel!(props)}\n          </div>\n        ) : (\n          onRenderLabel!(props)\n        )}\n      </label>\n    );\n  };\n\n  private _onRenderLabel = (props: IChoiceGroupOptionProps): JSX.Element => {\n    return (\n      <span id={props.labelId} className=\"ms-ChoiceFieldLabel\">\n        {props.text}\n      </span>\n    );\n  };\n}\n"]}