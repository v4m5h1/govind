{"version":3,"file":"FocusTrapZone.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/FocusTrapZone.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport {\r\n  BaseComponent,\r\n  KeyCodes,\r\n  elementContains,\r\n  getNativeProps,\r\n  divProperties,\r\n  getFirstTabbable,\r\n  getLastTabbable,\r\n  getNextElement,\r\n  focusAsync\r\n} from '../../Utilities';\r\nimport { IFocusTrapZone, IFocusTrapZoneProps } from './FocusTrapZone.types';\r\n\r\nexport class FocusTrapZone extends BaseComponent<IFocusTrapZoneProps, {}> implements IFocusTrapZone {\r\n  private static _focusStack: FocusTrapZone[] = [];\r\n\r\n  private _root = React.createRef<HTMLDivElement>();\r\n  private _previouslyFocusedElementOutsideTrapZone: HTMLElement;\r\n  private _previouslyFocusedElementInTrapZone?: HTMLElement;\r\n  private _hasFocusHandler: boolean;\r\n  private _hasClickHandler: boolean;\r\n\r\n  public componentDidMount(): void {\r\n    this._bringFocusIntoZone();\r\n    this._updateEventHandlers(this.props);\r\n  }\r\n\r\n  public componentWillReceiveProps(nextProps: IFocusTrapZoneProps): void {\r\n    const { elementToFocusOnDismiss } = nextProps;\r\n    if (elementToFocusOnDismiss && this._previouslyFocusedElementOutsideTrapZone !== elementToFocusOnDismiss) {\r\n      this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss;\r\n    }\r\n\r\n    this._updateEventHandlers(nextProps);\r\n  }\r\n\r\n  public componentDidUpdate(prevProps: IFocusTrapZoneProps) {\r\n    const prevForceFocusInsideTrap = prevProps.forceFocusInsideTrap !== undefined ? prevProps.forceFocusInsideTrap : true;\r\n    const newForceFocusInsideTrap = this.props.forceFocusInsideTrap !== undefined ? this.props.forceFocusInsideTrap : true;\r\n\r\n    if (!prevForceFocusInsideTrap && newForceFocusInsideTrap) {\r\n      // Transition from forceFocusInsideTrap disabled to enabled. Emulate what happens when a FocusTrapZone gets mounted\r\n      this._bringFocusIntoZone();\r\n    } else if (prevForceFocusInsideTrap && !newForceFocusInsideTrap) {\r\n      // Transition from forceFocusInsideTrap enabled to disabled. Emulate what happens when a FocusTrapZone gets unmounted\r\n      this._returnFocusToInitiator();\r\n    }\r\n  }\r\n\r\n  public componentWillUnmount(): void {\r\n    this._events.dispose();\r\n    this._returnFocusToInitiator();\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { className, ariaLabelledBy } = this.props;\r\n    const divProps = getNativeProps(this.props, divProperties);\r\n\r\n    return (\r\n      <div\r\n        {...divProps}\r\n        className={className}\r\n        ref={this._root}\r\n        aria-labelledby={ariaLabelledBy}\r\n        onKeyDown={this._onKeyboardHandler}\r\n        onFocusCapture={this._onFocusCapture}\r\n      >\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  public focus() {\r\n    const { focusPreviouslyFocusedInnerElement, firstFocusableSelector } = this.props;\r\n\r\n    if (\r\n      focusPreviouslyFocusedInnerElement &&\r\n      this._previouslyFocusedElementInTrapZone &&\r\n      elementContains(this._root.current, this._previouslyFocusedElementInTrapZone)\r\n    ) {\r\n      // focus on the last item that had focus in the zone before we left the zone\r\n      focusAsync(this._previouslyFocusedElementInTrapZone);\r\n      return;\r\n    }\r\n\r\n    const focusSelector =\r\n      typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector && firstFocusableSelector();\r\n\r\n    let _firstFocusableChild;\r\n\r\n    if (this._root.current) {\r\n      if (focusSelector) {\r\n        _firstFocusableChild = this._root.current.querySelector('.' + focusSelector);\r\n      } else {\r\n        _firstFocusableChild = getNextElement(this._root.current, this._root.current.firstChild as HTMLElement, true, false, false, true);\r\n      }\r\n    }\r\n    if (_firstFocusableChild) {\r\n      focusAsync(_firstFocusableChild);\r\n    }\r\n  }\r\n\r\n  private _bringFocusIntoZone(): void {\r\n    const { elementToFocusOnDismiss, disableFirstFocus = false } = this.props;\r\n\r\n    FocusTrapZone._focusStack.push(this);\r\n\r\n    this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss\r\n      ? elementToFocusOnDismiss\r\n      : (document.activeElement as HTMLElement);\r\n    if (!elementContains(this._root.current, this._previouslyFocusedElementOutsideTrapZone) && !disableFirstFocus) {\r\n      this.focus();\r\n    }\r\n  }\r\n\r\n  private _returnFocusToInitiator(): void {\r\n    const { ignoreExternalFocusing } = this.props;\r\n\r\n    FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter((value: FocusTrapZone) => {\r\n      return this !== value;\r\n    });\r\n\r\n    const activeElement = document.activeElement as HTMLElement;\r\n    if (\r\n      !ignoreExternalFocusing &&\r\n      this._previouslyFocusedElementOutsideTrapZone &&\r\n      typeof this._previouslyFocusedElementOutsideTrapZone.focus === 'function' &&\r\n      (elementContains(this._root.current, activeElement) || activeElement === document.body)\r\n    ) {\r\n      focusAsync(this._previouslyFocusedElementOutsideTrapZone);\r\n    }\r\n  }\r\n\r\n  private _updateEventHandlers(newProps: IFocusTrapZoneProps): void {\r\n    const { isClickableOutsideFocusTrap = false, forceFocusInsideTrap = true } = newProps;\r\n\r\n    if (forceFocusInsideTrap && !this._hasFocusHandler) {\r\n      this._events.on(window, 'focus', this._forceFocusInTrap, true);\r\n    } else if (!forceFocusInsideTrap && this._hasFocusHandler) {\r\n      this._events.off(window, 'focus', this._forceFocusInTrap, true);\r\n    }\r\n    this._hasFocusHandler = forceFocusInsideTrap;\r\n\r\n    if (!isClickableOutsideFocusTrap && !this._hasClickHandler) {\r\n      this._events.on(window, 'click', this._forceClickInTrap, true);\r\n    } else if (isClickableOutsideFocusTrap && this._hasClickHandler) {\r\n      this._events.off(window, 'click', this._forceClickInTrap, true);\r\n    }\r\n    this._hasClickHandler = !isClickableOutsideFocusTrap;\r\n  }\r\n\r\n  private _onFocusCapture = (ev: React.FocusEvent<HTMLDivElement>) => {\r\n    if (this.props.onFocusCapture) {\r\n      this.props.onFocusCapture(ev);\r\n    }\r\n    if (ev.target !== ev.currentTarget) {\r\n      // every time focus changes within the trap zone, remember the focused element so that\r\n      // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\r\n      this._previouslyFocusedElementInTrapZone = ev.target as HTMLElement;\r\n    }\r\n  };\r\n\r\n  private _onKeyboardHandler = (ev: React.KeyboardEvent<HTMLDivElement>): void => {\r\n    if (this.props.onKeyDown) {\r\n      this.props.onKeyDown(ev);\r\n    }\r\n\r\n    // If the default has been prevented, do not process keyboard events.\r\n    if (ev.isDefaultPrevented()) {\r\n      return;\r\n    }\r\n\r\n    if (ev.which !== KeyCodes.tab) {\r\n      return;\r\n    }\r\n\r\n    if (!this._root.current) {\r\n      return;\r\n    }\r\n\r\n    const _firstTabbableChild = getFirstTabbable(this._root.current, this._root.current.firstChild as HTMLElement, true);\r\n    const _lastTabbableChild = getLastTabbable(this._root.current, this._root.current.lastChild as HTMLElement, true);\r\n\r\n    if (ev.shiftKey && _firstTabbableChild === ev.target) {\r\n      focusAsync(_lastTabbableChild);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    } else if (!ev.shiftKey && _lastTabbableChild === ev.target) {\r\n      focusAsync(_firstTabbableChild);\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n    }\r\n  };\r\n\r\n  private _forceFocusInTrap(ev: FocusEvent): void {\r\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n      const focusedElement = (ev.relatedTarget as HTMLElement) || (document.activeElement as HTMLElement);\r\n\r\n      if (!elementContains(this._root.current, focusedElement)) {\r\n        this.focus();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n\r\n  private _forceClickInTrap(ev: MouseEvent): void {\r\n    if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n      const clickedElement = ev.target as HTMLElement;\r\n\r\n      if (clickedElement && !elementContains(this._root.current, clickedElement)) {\r\n        this.focus();\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}