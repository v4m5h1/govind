{"version":3,"file":"Rating.base.js","sourceRoot":"../src/","sources":["components/Rating/Rating.base.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { BaseComponent, classNamesFunction, css, format, getId, divProperties, getNativeProps } from '../../Utilities';\nimport { IProcessedStyleSet } from '../../Styling';\nimport { Icon } from '../../Icon';\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\nimport { IRatingProps, RatingSize, IRatingStyleProps, IRatingStyles } from './Rating.types';\n\nconst getClassNames = classNamesFunction<IRatingStyleProps, IRatingStyles>();\n\ninterface IRatingStarProps extends React.AllHTMLAttributes<HTMLElement> {\n  fillPercentage: number;\n  disabled: boolean;\n  readOnly: boolean;\n  classNames: IProcessedStyleSet<IRatingStyles>;\n  icon?: string;\n}\n\nexport interface IRatingState {\n  rating: number | null | undefined;\n}\n\nconst RatingStar = (props: IRatingStarProps) => {\n  const icon = props.icon || 'FavoriteStarFill';\n  return (\n    <div className={props.classNames.ratingStar} key={props.id}>\n      <Icon className={props.classNames.ratingStarBack} iconName={icon} />\n      {!props.disabled && (\n        <Icon className={props.classNames.ratingStarFront} iconName={icon} style={{ width: props.fillPercentage + '%' }} />\n      )}\n    </div>\n  );\n};\n\nexport class RatingBase extends BaseComponent<IRatingProps, IRatingState> {\n  public static defaultProps: IRatingProps = {\n    min: 1,\n    max: 5\n  };\n  private _id: string;\n  private _min: number;\n  private _labelId: string;\n  private _classNames: IProcessedStyleSet<IRatingStyles>;\n\n  constructor(props: IRatingProps) {\n    super(props);\n\n    this._warnDeprecations({\n      onChanged: 'onChange'\n    });\n\n    this._id = getId('Rating');\n    this._min = this.props.allowZeroStars ? 0 : 1;\n    if (this.props.min !== undefined && this.props.min !== 1) {\n      this._min = this.props.min;\n    }\n    this._labelId = getId('RatingLabel');\n\n    this.state = {\n      rating: this._getInitialValue(props)\n    };\n  }\n\n  public componentWillReceiveProps(nextProps: IRatingProps): void {\n    if (typeof nextProps.rating !== 'undefined' && nextProps.rating !== this.state.rating) {\n      this.setState({\n        rating: this._getClampedRating(nextProps.rating)\n      } as IRatingState);\n    }\n  }\n\n  public render(): JSX.Element {\n    const id = this._id;\n    const stars = [];\n    const starIds = [];\n    const {\n      disabled,\n      getAriaLabel,\n      styles,\n      max,\n      rating,\n      readOnly,\n      size,\n      theme,\n      icon = 'FavoriteStarFill',\n      unselectedIcon = 'FavoriteStar'\n    } = this.props;\n    const divProps = getNativeProps(this.props, divProperties);\n    this._classNames = getClassNames(styles!, {\n      disabled,\n      readOnly,\n      theme: theme!\n    });\n\n    for (let i = this._min as number; i <= (max as number); i++) {\n      if (i !== 0) {\n        const fillPercentage = this._getFillingPercentage(i);\n        const ratingStarProps: IRatingStarProps = {\n          fillPercentage,\n          disabled: disabled ? true : false,\n          readOnly: readOnly ? true : false,\n          classNames: this._classNames,\n          icon: fillPercentage > 0 ? icon : unselectedIcon\n        };\n\n        starIds.push(this._getStarId(i - 1));\n\n        stars.push(\n          <button\n            className={css(this._classNames.ratingButton, {\n              [this._classNames.ratingStarIsLarge]: size === RatingSize.Large,\n              [this._classNames.ratingStarIsSmall]: size !== RatingSize.Large\n            })}\n            id={starIds[i - 1]}\n            key={i}\n            {...(i === Math.ceil(this.state.rating as number) ? { 'data-is-current': true } : {})}\n            onFocus={this._onFocus.bind(this, i)}\n            onClick={this._onFocus.bind(this, i)} // For Safari & Firefox on OSX\n            disabled={disabled || readOnly ? true : false}\n            role=\"presentation\"\n            type=\"button\"\n          >\n            {this._getLabel(i)}\n            <RatingStar key={i + 'rating'} {...ratingStarProps} />\n          </button>\n        );\n      }\n    }\n\n    return (\n      <div\n        className={css('ms-Rating-star', this._classNames.root, {\n          [this._classNames.rootIsLarge]: size === RatingSize.Large,\n          [this._classNames.rootIsSmall]: size !== RatingSize.Large\n        })}\n        aria-label={getAriaLabel ? getAriaLabel(this.state.rating ? this.state.rating : 0, this.props.max as number) : ''}\n        id={id}\n        {...divProps}\n      >\n        <FocusZone\n          direction={FocusZoneDirection.horizontal}\n          tabIndex={readOnly ? 0 : -1}\n          className={css(this._classNames.ratingFocusZone, {\n            [this._classNames.rootIsLarge]: size === RatingSize.Large,\n            [this._classNames.rootIsSmall]: size !== RatingSize.Large\n          })}\n          data-is-focusable={readOnly ? true : false}\n          defaultActiveElement={rating ? starIds[rating - 1] && '#' + starIds[rating - 1] : undefined}\n        >\n          {stars}\n        </FocusZone>\n      </div>\n    );\n  }\n\n  private _getStarId(index: number): string {\n    return this._id + '-star-' + index;\n  }\n\n  private _onFocus(value: number, ev: React.FocusEvent<HTMLElement>): void {\n    if (this.state.rating !== value) {\n      this.setState({\n        rating: value\n      } as IRatingState);\n\n      const { onChange, onChanged } = this.props;\n\n      if (onChange) {\n        onChange(ev, value);\n      }\n\n      if (onChanged) {\n        onChanged(value);\n      }\n    }\n  }\n\n  private _getLabel(rating: number): JSX.Element {\n    const text = this.props.ariaLabelFormat || '';\n\n    return (\n      <span id={`${this._labelId}-${rating}`} className={this._classNames.labelText}>\n        {format(text, rating, this.props.max)}\n      </span>\n    );\n  }\n\n  private _getInitialValue(props: IRatingProps): number | undefined {\n    if (typeof props.rating === 'undefined') {\n      return this._min;\n    }\n\n    if (props.rating === null) {\n      return undefined;\n    }\n\n    return this._getClampedRating(props.rating);\n  }\n\n  private _getClampedRating(rating: number): number {\n    return Math.min(Math.max(rating, this._min as number), this.props.max as number);\n  }\n\n  private _getFillingPercentage(starPosition: number): number {\n    const ceilValue = Math.ceil(this.state.rating as number);\n    let fillPercentage = 100;\n\n    if (starPosition === this.state.rating) {\n      fillPercentage = 100;\n    } else if (starPosition === ceilValue) {\n      fillPercentage = 100 * ((this.state.rating as number) % 1);\n    } else if (starPosition > ceilValue) {\n      fillPercentage = 0;\n    }\n    return fillPercentage;\n  }\n}\n"]}