{"version":3,"file":"Stack.Horizontal.Configure.Example.js","sourceRoot":"../src/","sources":["components/Stack/examples/Stack.Horizontal.Configure.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Checkbox, Dropdown, IDropdownOption, Slider, Stack, mergeStyleSets, DefaultPalette, TextField } from 'office-ui-fabric-react';\n\nexport type HorizontalAlignment = 'start' | 'center' | 'end' | 'space-around' | 'space-between' | 'space-evenly';\nexport type VerticalAlignment = 'start' | 'center' | 'end';\n\nexport interface IExampleState {\n  numItems: number;\n  showBoxShadow: boolean;\n  preventOverflow: boolean;\n  wrap: boolean;\n  wrapperWidth: number;\n  disableShrink: boolean;\n  columnGap: number;\n  rowGap: number;\n  paddingLeft: number;\n  paddingRight: number;\n  paddingTop: number;\n  paddingBottom: number;\n  horizontalAlignment: HorizontalAlignment;\n  verticalAlignment: VerticalAlignment;\n  hideEmptyChildren: boolean;\n  emptyChildren: string[];\n}\n\nexport class HorizontalStackConfigureExample extends React.Component<{}, IExampleState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {\n      numItems: 5,\n      showBoxShadow: false,\n      preventOverflow: false,\n      wrap: false,\n      wrapperWidth: 100,\n      disableShrink: true,\n      columnGap: 0,\n      rowGap: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      paddingBottom: 0,\n      horizontalAlignment: 'start',\n      verticalAlignment: 'start',\n      hideEmptyChildren: false,\n      emptyChildren: []\n    };\n  }\n\n  public render(): JSX.Element {\n    const {\n      numItems,\n      showBoxShadow,\n      preventOverflow,\n      wrap,\n      wrapperWidth,\n      disableShrink,\n      columnGap,\n      rowGap,\n      paddingLeft,\n      paddingRight,\n      paddingTop,\n      paddingBottom,\n      horizontalAlignment,\n      verticalAlignment,\n      hideEmptyChildren,\n      emptyChildren\n    } = this.state;\n\n    const styles = mergeStyleSets({\n      root: [\n        {\n          background: DefaultPalette.themeTertiary,\n          minHeight: 100,\n          marginLeft: 10,\n          marginRight: 10,\n          width: `calc(${wrapperWidth}% - 20px)`\n        },\n        preventOverflow && {\n          overflow: 'hidden' as 'hidden'\n        }\n      ],\n\n      item: {\n        width: 50,\n        height: 50,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: DefaultPalette.themePrimary,\n        color: DefaultPalette.white,\n        boxShadow: showBoxShadow ? `0px 0px 10px 5px ${DefaultPalette.themeDarker}` : ''\n      }\n    });\n\n    const stackStyles = {\n      inner: {\n        overflow: preventOverflow ? 'hidden' : ('visible' as 'hidden' | 'visible')\n      }\n    };\n\n    const tokens = {\n      sectionStack: {\n        childrenGap: 10\n      },\n      configureStack: {\n        childrenGap: 20\n      }\n    };\n\n    return (\n      <Stack tokens={tokens.sectionStack}>\n        <Stack horizontal disableShrink>\n          <Stack.Item grow>\n            <Stack>\n              <Slider\n                label=\"Number of items:\"\n                min={1}\n                max={30}\n                step={1}\n                defaultValue={5}\n                showValue={true}\n                onChange={this._onNumItemsChange}\n              />\n              <Stack horizontal disableShrink>\n                <Checkbox label=\"Shadow around items\" onChange={this._onBoxShadowChange} styles={{ root: { marginRight: 10 } }} />\n                <Checkbox label=\"Prevent item overflow\" onChange={this._onPreventOverflowChange} />\n              </Stack>\n            </Stack>\n          </Stack.Item>\n          <Stack.Item grow>\n            <Stack horizontal disableShrink tokens={tokens.configureStack}>\n              <Stack>\n                <Checkbox label=\"Wrap items\" onChange={this._onWrapChange} styles={{ root: { marginBottom: 10 } }} />\n                <Checkbox label=\"Shrink items\" onChange={this._onShrinkChange} />\n              </Stack>\n              <Stack.Item grow>\n                <Slider\n                  label=\"Container width:\"\n                  min={1}\n                  max={100}\n                  step={1}\n                  defaultValue={100}\n                  showValue={true}\n                  onChange={this._onWrapperWidthChange}\n                />\n              </Stack.Item>\n            </Stack>\n          </Stack.Item>\n        </Stack>\n\n        <Stack horizontal disableShrink tokens={tokens.configureStack}>\n          <Stack.Item grow>\n            <Stack>\n              <Slider\n                label=\"Horizontal gap between items:\"\n                min={0}\n                max={50}\n                step={1}\n                defaultValue={0}\n                showValue={true}\n                onChange={this._onGapChange}\n              />\n              <Slider\n                label=\"Vertical gap between items:\"\n                min={0}\n                max={50}\n                step={1}\n                defaultValue={0}\n                showValue={true}\n                onChange={this._onVerticalGapChange}\n              />\n            </Stack>\n          </Stack.Item>\n          <Stack.Item grow>\n            <Stack>\n              <Slider\n                label=\"Left padding:\"\n                min={0}\n                max={50}\n                step={1}\n                defaultValue={0}\n                showValue={true}\n                onChange={this._onPaddingLeftChange}\n              />\n              <Slider\n                label=\"Right padding:\"\n                min={0}\n                max={50}\n                step={1}\n                defaultValue={0}\n                showValue={true}\n                onChange={this._onPaddingRightChange}\n              />\n            </Stack>\n          </Stack.Item>\n          <Stack.Item grow>\n            <Stack>\n              <Slider\n                label=\"Top padding:\"\n                min={0}\n                max={50}\n                step={1}\n                defaultValue={0}\n                showValue={true}\n                onChange={this._onPaddingTopChange}\n              />\n              <Slider\n                label=\"Bottom padding:\"\n                min={0}\n                max={50}\n                step={1}\n                defaultValue={0}\n                showValue={true}\n                onChange={this._onPaddingBottomChange}\n              />\n            </Stack>\n          </Stack.Item>\n        </Stack>\n\n        <Stack horizontal disableShrink tokens={tokens.configureStack} verticalAlign=\"end\">\n          <Stack.Item grow>\n            <Dropdown\n              selectedKey={horizontalAlignment}\n              placeholder=\"Select Horizontal Alignment\"\n              label=\"Horizontal alignment:\"\n              options={[\n                { key: 'start', text: 'Left' },\n                { key: 'center', text: 'Center' },\n                { key: 'end', text: 'Right' },\n                { key: 'space-around', text: 'Space around' },\n                { key: 'space-between', text: 'Space between' },\n                { key: 'space-evenly', text: 'Space evenly' }\n              ]}\n              onChange={this._onHorizontalAlignChange}\n            />\n          </Stack.Item>\n          <Stack.Item grow>\n            <Dropdown\n              selectedKey={verticalAlignment}\n              placeholder=\"Select Vertical Alignment\"\n              label=\"Vertical alignment:\"\n              options={[{ key: 'start', text: 'Top' }, { key: 'center', text: 'Center' }, { key: 'end', text: 'Bottom' }]}\n              onChange={this._onVerticalAlignChange}\n            />\n          </Stack.Item>\n          <Stack.Item>\n            <Checkbox label=\"Hide empty children\" onChange={this._onHideEmptyChildrenChange} />\n          </Stack.Item>\n          <Stack.Item grow>\n            <TextField label=\"Enter a space-separated list of empty children (e.g. 1 2 3):\" onChange={this._onEmptyChildrenChange} />\n          </Stack.Item>\n        </Stack>\n\n        <Stack\n          horizontal\n          wrap={wrap}\n          disableShrink={disableShrink}\n          tokens={{ childrenGap: rowGap + ' ' + columnGap }}\n          padding={`${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`}\n          horizontalAlign={horizontalAlignment}\n          verticalAlign={verticalAlignment}\n          className={styles.root}\n          styles={stackStyles}\n        >\n          {this._range(1, numItems).map((value: number, index: number) => {\n            if (emptyChildren.indexOf(value.toString()) !== -1) {\n              return hideEmptyChildren ? <Stack.Item key={index} className={styles.item} /> : <span key={index} className={styles.item} />;\n            }\n\n            return (\n              <span key={index} className={styles.item}>\n                {value}\n              </span>\n            );\n          })}\n        </Stack>\n      </Stack>\n    );\n  }\n\n  private _onNumItemsChange = (value: number): void => {\n    this.setState({ numItems: value });\n  };\n\n  private _range = (start: number, end: number): number[] => {\n    const result = [];\n    for (let i = start; i <= end; i++) {\n      result.push(i);\n    }\n    return result;\n  };\n\n  private _onBoxShadowChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\n    this.setState({ showBoxShadow: isChecked });\n  };\n\n  private _onPreventOverflowChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\n    this.setState({ preventOverflow: isChecked });\n  };\n\n  private _onWrapChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\n    this.setState({ wrap: isChecked });\n  };\n\n  private _onShrinkChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\n    this.setState({ disableShrink: !isChecked });\n  };\n\n  private _onWrapperWidthChange = (value: number): void => {\n    this.setState({ wrapperWidth: value });\n  };\n\n  private _onGapChange = (value: number): void => {\n    this.setState({ columnGap: value });\n  };\n\n  private _onVerticalGapChange = (value: number): void => {\n    this.setState({ rowGap: value });\n  };\n\n  private _onPaddingLeftChange = (value: number): void => {\n    this.setState({ paddingLeft: value });\n  };\n\n  private _onPaddingRightChange = (value: number): void => {\n    this.setState({ paddingRight: value });\n  };\n\n  private _onPaddingTopChange = (value: number): void => {\n    this.setState({ paddingTop: value });\n  };\n\n  private _onPaddingBottomChange = (value: number): void => {\n    this.setState({ paddingBottom: value });\n  };\n\n  private _onHorizontalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({ horizontalAlignment: option.key as HorizontalAlignment });\n  };\n\n  private _onVerticalAlignChange = (ev: React.FormEvent<HTMLDivElement>, option: IDropdownOption): void => {\n    this.setState({ verticalAlignment: option.key as VerticalAlignment });\n  };\n\n  private _onHideEmptyChildrenChange = (ev: React.FormEvent<HTMLElement>, isChecked: boolean): void => {\n    this.setState({ hideEmptyChildren: isChecked });\n  };\n\n  private _onEmptyChildrenChange = (ev: React.FormEvent<HTMLInputElement>, value?: string): void => {\n    if (value === undefined) {\n      return;\n    }\n    this.setState({ emptyChildren: value.replace(/,/g, '').split(' ') });\n  };\n}\n"]}