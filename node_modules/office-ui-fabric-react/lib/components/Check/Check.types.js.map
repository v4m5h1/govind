{"version":3,"file":"Check.types.js","sourceRoot":"../src/","sources":["components/Check/Check.types.ts"],"names":[],"mappings":"","sourcesContent":["import * as React from 'react';\nimport { CheckBase } from './Check.base';\nimport { IStyle, ITheme } from '../../Styling';\nimport { IRefObject, IStyleFunctionOrObject } from '../../Utilities';\n\n/**\n * {@docCategory Check}\n */\nexport interface ICheckProps extends React.ClassAttributes<CheckBase> {\n  /**\n   * Gets the component ref.\n   */\n  componentRef?: IRefObject<ICheckProps>;\n\n  /**\n   * Whether or not this menu item is currently checked.\n   * @defaultvalue false\n   */\n  checked?: boolean;\n\n  /**\n   * Call to provide customized styling that will layer on top of the variant rules\n   */\n  styles?: IStyleFunctionOrObject<ICheckStyleProps, ICheckStyles>;\n\n  /**\n   * Flag to always show the check icon. Not currently working.\n   */\n  alwaysShowCheck?: boolean;\n\n  /**\n   * Theme provided by HOC.\n   */\n  theme?: ITheme;\n\n  /**\n   * Additional css class to apply to the Check\n   * @defaultvalue undefined\n   */\n  className?: string;\n}\n\n/**\n * {@docCategory Check}\n */\nexport interface ICheckStyleProps {\n  /**\n   * Accept theme prop.\n   */\n  theme: ITheme;\n\n  /**\n   * Accept custom classNames\n   */\n  className?: string;\n\n  /**\n   * Accept custom checkBox size in pixels.\n   * @defaultvalue '18px'\n   */\n  checkBoxHeight?: string;\n\n  checked?: boolean;\n}\n\n/**\n * {@docCategory Check}\n */\nexport interface ICheckStyles {\n  /**\n   * Style for the root element.\n   */\n  root: IStyle;\n\n  /**\n   * The 'check' icon styles.\n   */\n  check: IStyle;\n\n  /**\n   * The 'circle' icon styles.\n   */\n  circle: IStyle;\n\n  /**\n   * Check host style\n   */\n  checkHost: IStyle;\n}\n"]}