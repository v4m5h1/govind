{"version":3,"file":"List.Ghosting.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Ghosting.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { FocusZone, FocusZoneDirection } from 'office-ui-fabric-react/lib/FocusZone';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport { Image, ImageFit } from 'office-ui-fabric-react/lib/Image';\nimport { mergeStyleSets, getTheme, DefaultFontStyles, FontSizes, getFocusStyle } from 'office-ui-fabric-react/lib/Styling';\n\nexport type IExampleItem = { name: string; thumbnail: string };\n\nexport interface IListGhostingExampleProps {\n  items: IExampleItem[];\n}\n\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n  container: {\n    overflow: 'auto',\n    maxHeight: 500\n  },\n  itemCell: [\n    getFocusStyle(theme, { inset: -1 }),\n    {\n      minHeight: 54,\n      padding: 10,\n      boxSizing: 'border-box',\n      borderBottom: `1px solid ${theme.semanticColors.bodyDivider}`,\n      display: 'flex',\n      selectors: {\n        '&:hover': { background: theme.palette.neutralLight }\n      }\n    }\n  ],\n  itemImage: {\n    flexShrink: 0\n  },\n  itemContent: {\n    marginLeft: 10,\n    overflow: 'hidden',\n    flexGrow: 1\n  },\n  itemName: [\n    DefaultFontStyles.xLarge,\n    {\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      textOverflow: 'ellipsis'\n    }\n  ],\n  itemIndex: {\n    fontSize: FontSizes.small,\n    color: theme.palette.neutralTertiary,\n    marginBottom: 10\n  },\n  chevron: {\n    alignSelf: 'center',\n    marginLeft: 10,\n    color: theme.palette.neutralTertiary,\n    fontSize: FontSizes.large,\n    flexShrink: 0\n  }\n});\n\nexport class ListGhostingExample extends React.Component<IListGhostingExampleProps> {\n  public render(): JSX.Element {\n    const { items } = this.props;\n\n    return (\n      <FocusZone direction={FocusZoneDirection.vertical}>\n        <div className={classNames.container} data-is-scrollable={true}>\n          <List items={items} onRenderCell={this._onRenderCell} />\n        </div>\n      </FocusZone>\n    );\n  }\n\n  private _onRenderCell(item: IExampleItem, index: number, isScrolling: boolean): JSX.Element {\n    return (\n      <div className={classNames.itemCell} data-is-focusable={true}>\n        <Image\n          className={classNames.itemImage}\n          src={isScrolling ? undefined : item.thumbnail}\n          width={50}\n          height={50}\n          imageFit={ImageFit.cover}\n        />\n        <div className={classNames.itemContent}>\n          <div className={classNames.itemName}>{item.name}</div>\n          <div className={classNames.itemIndex}>{`Item ${index}`}</div>\n        </div>\n      </div>\n    );\n  }\n}\n"]}