{"version":3,"file":"List.Grid.Example.js","sourceRoot":"../src/","sources":["components/List/examples/List.Grid.Example.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,MAAM,sCAAsC,CAAC;AACjE,OAAO,EAAE,IAAI,EAAE,MAAM,iCAAiC,CAAC;AACvD,OAAO,0BAA0B,CAAC;AAOlC,IAAM,aAAa,GAAG,CAAC,CAAC;AACxB,IAAM,cAAc,GAAG,GAAG,CAAC;AAE3B;IAAqC,2CAAsC;IAA3E;QAAA,qEAoDC;QAhCS,0BAAoB,GAAG,UAAC,SAAiB,EAAE,WAAuB;YACxE,IAAI,SAAS,KAAK,CAAC,EAAE;gBACnB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,cAAc,CAAC,CAAC;gBAClE,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,KAAI,CAAC,YAAY,CAAC,CAAC;gBACtE,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,YAAY,CAAC;aACrC;YAED,OAAO,KAAI,CAAC,YAAY,GAAG,aAAa,CAAC;QAC3C,CAAC,CAAC;QAEM,oBAAc,GAAG;YACvB,OAAO,KAAI,CAAC,UAAU,GAAG,aAAa,CAAC;QACzC,CAAC,CAAC;QAEM,mBAAa,GAAG,UAAC,IAAS,EAAE,KAAyB;YAC3D,OAAO,CACL,6BACE,SAAS,EAAC,yBAAyB,uBAChB,IAAI,EACvB,KAAK,EAAE;oBACL,KAAK,EAAE,GAAG,GAAG,KAAI,CAAC,YAAY,GAAG,GAAG;iBACrC;gBAED,6BAAK,SAAS,EAAC,0BAA0B;oBACvC,6BAAK,SAAS,EAAC,0BAA0B;wBACvC,6BAAK,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,SAAS,EAAC,0BAA0B,GAAG;wBACjE,8BAAM,SAAS,EAAC,0BAA0B,IAAE,UAAQ,KAAO,CAAQ,CAC/D,CACF,CACF,CACP,CAAC;QACJ,CAAC,CAAC;;IACJ,CAAC;IA/CQ,gCAAM,GAAb;QACE,OAAO,CACL,oBAAC,SAAS;YACR,oBAAC,IAAI,IACH,SAAS,EAAC,oBAAoB,EAC9B,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,EACvB,mBAAmB,EAAE,IAAI,CAAC,oBAAoB,EAC9C,aAAa,EAAE,IAAI,CAAC,cAAc,EAClC,oBAAoB,EAAE,CAAC,EACvB,YAAY,EAAE,IAAI,CAAC,aAAa,GAChC,CACQ,CACb,CAAC;IACJ,CAAC;IAkCH,sBAAC;AAAD,CAAC,AApDD,CAAqC,KAAK,CAAC,SAAS,GAoDnD","sourcesContent":["import * as React from 'react';\nimport { FocusZone } from 'office-ui-fabric-react/lib/FocusZone';\nimport { List } from 'office-ui-fabric-react/lib/List';\nimport './List.Grid.Example.scss';\nimport { IRectangle } from 'office-ui-fabric-react/lib/Utilities';\n\nexport interface IListGridExampleProps {\n  items: any[];\n}\n\nconst ROWS_PER_PAGE = 3;\nconst MAX_ROW_HEIGHT = 250;\n\nexport class ListGridExample extends React.Component<IListGridExampleProps> {\n  private _columnCount: number;\n  private _columnWidth: number;\n  private _rowHeight: number;\n\n  public render(): JSX.Element {\n    return (\n      <FocusZone>\n        <List\n          className=\"ms-ListGridExample\"\n          items={this.props.items}\n          getItemCountForPage={this._getItemCountForPage}\n          getPageHeight={this._getPageHeight}\n          renderedWindowsAhead={4}\n          onRenderCell={this._onRenderCell}\n        />\n      </FocusZone>\n    );\n  }\n\n  private _getItemCountForPage = (itemIndex: number, surfaceRect: IRectangle): number => {\n    if (itemIndex === 0) {\n      this._columnCount = Math.ceil(surfaceRect.width / MAX_ROW_HEIGHT);\n      this._columnWidth = Math.floor(surfaceRect.width / this._columnCount);\n      this._rowHeight = this._columnWidth;\n    }\n\n    return this._columnCount * ROWS_PER_PAGE;\n  };\n\n  private _getPageHeight = (): number => {\n    return this._rowHeight * ROWS_PER_PAGE;\n  };\n\n  private _onRenderCell = (item: any, index: number | undefined): JSX.Element => {\n    return (\n      <div\n        className=\"ms-ListGridExample-tile\"\n        data-is-focusable={true}\n        style={{\n          width: 100 / this._columnCount + '%'\n        }}\n      >\n        <div className=\"ms-ListGridExample-sizer\">\n          <div className=\"msListGridExample-padder\">\n            <img src={item.thumbnail} className=\"ms-ListGridExample-image\" />\n            <span className=\"ms-ListGridExample-label\">{`item ${index}`}</span>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n"]}