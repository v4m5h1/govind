{"version":3,"file":"MessageBar.styles.js","sourceRoot":"../src/","sources":["components/MessageBar/MessageBar.styles.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  IStyle,\n  IPalette,\n  ISemanticColors,\n  HighContrastSelector,\n  ScreenWidthMaxSmall,\n  getScreenSelector,\n  getFocusStyle,\n  getGlobalClassNames\n} from '../../Styling';\nimport { IMessageBarStyleProps, IMessageBarStyles, MessageBarType } from './MessageBar.types';\n\nconst GlobalClassNames = {\n  root: 'ms-MessageBar',\n  error: 'ms-MessageBar--error',\n  blocked: 'ms-MessageBar--blocked',\n  severeWarning: 'ms-MessageBar--severeWarning',\n  success: 'ms-MessageBar--success',\n  warning: 'ms-MessageBar--warning',\n  multiline: 'ms-MessageBar-multiline',\n  singleline: 'ms-MessageBar-singleline',\n  dismissalSingleLine: 'ms-MessageBar-dismissalSingleLine',\n  expandingSingleLine: 'ms-MessageBar-expandingSingleLine',\n  content: 'ms-MessageBar-content',\n  iconContainer: 'ms-MessageBar-icon',\n  text: 'ms-MessageBar-text',\n  innerText: 'ms-MessageBar-innerText',\n  dismissSingleLine: 'ms-MessageBar-dismissSingleLine',\n  expandSingleLine: 'ms-MessageBar-expandSingleLine',\n  dismissal: 'ms-MessageBar-dismissal',\n  expand: 'ms-MessageBar-expand',\n  actions: 'ms-MessageBar-actions',\n  actionsSingleline: 'ms-MessageBar-actionsSingleLine'\n};\n\n// Returns the background color of the MessageBar root element based on the type of MessageBar.\nconst getRootBackground = (messageBarType: MessageBarType | undefined, palette: IPalette, semanticColors: ISemanticColors): string => {\n  switch (messageBarType) {\n    case MessageBarType.error:\n    case MessageBarType.blocked:\n      return semanticColors.errorBackground;\n    case MessageBarType.severeWarning:\n      return semanticColors.blockingBackground;\n    case MessageBarType.success:\n      return semanticColors.successBackground;\n    case MessageBarType.warning:\n      return semanticColors.warningBackground;\n  }\n  return palette.neutralLighter;\n};\n\n// Returns the icon color based on the type of MessageBar.\nconst getIconColor = (messageBarType: MessageBarType | undefined, palette: IPalette, semanticColors: ISemanticColors): string => {\n  switch (messageBarType) {\n    case MessageBarType.error:\n    case MessageBarType.blocked:\n    case MessageBarType.severeWarning:\n      return semanticColors.errorText;\n    case MessageBarType.success:\n      return palette.green;\n    case MessageBarType.warning:\n      return semanticColors.warningText;\n  }\n  return palette.neutralSecondary;\n};\n\nexport const getStyles = (props: IMessageBarStyleProps): IMessageBarStyles => {\n  const { theme, className, messageBarType, onDismiss, actions, truncated, isMultiline, expandSingleLine } = props;\n  const { semanticColors, palette, fonts } = theme;\n\n  const SmallScreenSelector = getScreenSelector(0, ScreenWidthMaxSmall);\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  const dismissalAndExpandIconStyle: IStyle = {\n    fontSize: 12,\n    height: 12,\n    lineHeight: '12px',\n    color: palette.neutralPrimary,\n    selectors: {\n      [HighContrastSelector]: {\n        MsHighContrastAdjust: 'none',\n        color: 'window'\n      }\n    }\n  };\n\n  const dismissalAndExpandSingleLineStyle: IStyle = {\n    display: 'flex',\n    selectors: {\n      '& .ms-Button-icon': dismissalAndExpandIconStyle\n    }\n  };\n\n  const dismissalAndExpandStyle: IStyle = {\n    flexShrink: 0,\n    margin: 8,\n    marginLeft: 0,\n    selectors: {\n      '& .ms-Button-icon': dismissalAndExpandIconStyle,\n      [SmallScreenSelector]: {\n        margin: '0px 0px 0px 8px'\n      }\n    }\n  };\n\n  const focusStyle = getFocusStyle(theme, { borderColor: palette.black });\n\n  return {\n    root: [\n      classNames.root,\n      theme.fonts.medium,\n      messageBarType === MessageBarType.error && classNames.error,\n      messageBarType === MessageBarType.blocked && classNames.blocked,\n      messageBarType === MessageBarType.severeWarning && classNames.severeWarning,\n      messageBarType === MessageBarType.success && classNames.success,\n      messageBarType === MessageBarType.warning && classNames.warning,\n      isMultiline ? classNames.multiline : classNames.singleline,\n      !isMultiline && onDismiss && classNames.dismissalSingleLine,\n      !isMultiline && truncated && classNames.expandingSingleLine,\n      {\n        background: getRootBackground(messageBarType, palette, semanticColors),\n        color: palette.neutralPrimary,\n        minHeight: 32,\n        width: '100%',\n        boxSizing: 'border-box',\n        display: 'flex',\n        wordBreak: 'break-word',\n        selectors: {\n          '& .ms-Link': {\n            color: palette.themeDark,\n            ...fonts.small\n          },\n          [HighContrastSelector]: {\n            background: 'windowText',\n            color: 'Window'\n          }\n        }\n      },\n      isMultiline && {\n        flexDirection: 'column'\n      },\n      !isMultiline && {\n        selectors: {\n          [SmallScreenSelector]: {\n            flexDirection: 'column'\n          }\n        }\n      },\n      truncated && {\n        flexDirection: 'column',\n        selectors: {\n          '& .ms-Button-icon': dismissalAndExpandIconStyle\n        }\n      },\n      className\n    ],\n    content: [\n      classNames.content,\n      {\n        display: 'flex',\n        lineHeight: 'normal',\n        width: '100%',\n        boxSizing: 'border-box'\n      },\n      !isMultiline && {\n        selectors: {\n          [SmallScreenSelector]: {\n            flexDirection: 'row'\n          }\n        }\n      },\n      (truncated || isMultiline) && {\n        flexDirection: 'row'\n      }\n    ],\n    iconContainer: [\n      classNames.iconContainer,\n      {\n        fontSize: 16,\n        minWidth: 16,\n        minHeight: 16,\n        display: 'flex',\n        color: palette.neutralSecondary,\n        flexShrink: 0,\n        margin: 16,\n        marginRight: 0,\n        selectors: {\n          [SmallScreenSelector]: {\n            margin: '8px 0px 8px 8px'\n          }\n        }\n      }\n    ],\n    icon: {\n      color: getIconColor(messageBarType, palette, semanticColors),\n      selectors: {\n        [HighContrastSelector]: {\n          MsHighContrastAdjust: 'none',\n          color: 'window'\n        }\n      }\n    },\n    text: [\n      classNames.text,\n      {\n        minWidth: 0,\n        display: 'flex',\n        flexGrow: 1,\n        margin: '16px 8px',\n        ...fonts.small,\n        selectors: {\n          [SmallScreenSelector]: {\n            margin: '8px 0px 8px 8px'\n          },\n          [HighContrastSelector]: {\n            MsHighContrastAdjust: 'none',\n            color: 'window'\n          }\n        }\n      },\n      !onDismiss && {\n        marginRight: 16,\n        selectors: {\n          [SmallScreenSelector]: {\n            marginRight: 8\n          }\n        }\n      },\n      isMultiline &&\n        actions && {\n          marginBottom: 8,\n          selectors: {\n            [SmallScreenSelector]: {\n              marginBottom: 0\n            }\n          }\n        },\n      !isMultiline &&\n        actions && {\n          selectors: {\n            [SmallScreenSelector]: {\n              marginBottom: 0\n            }\n          }\n        }\n    ],\n    innerText: [\n      classNames.innerText,\n      {\n        lineHeight: 16,\n        selectors: {\n          '& span': {\n            selectors: {\n              '& a': {\n                paddingLeft: 4\n              }\n            }\n          }\n        }\n      },\n      truncated && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap'\n      },\n      !isMultiline && {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap'\n      },\n      !isMultiline &&\n        !truncated && {\n          selectors: {\n            [SmallScreenSelector]: {\n              overflow: 'visible',\n              whiteSpace: 'pre-wrap'\n            }\n          }\n        },\n      expandSingleLine && {\n        overflow: 'visible',\n        whiteSpace: 'pre-wrap'\n      }\n    ],\n    dismissSingleLine: [classNames.dismissSingleLine, dismissalAndExpandSingleLineStyle],\n    expandSingleLine: [classNames.expandSingleLine, dismissalAndExpandSingleLineStyle],\n    dismissal: [classNames.dismissal, dismissalAndExpandStyle, focusStyle],\n    expand: [classNames.expand, dismissalAndExpandStyle, focusStyle],\n    actions: [\n      isMultiline ? classNames.actions : classNames.actionsSingleline,\n      {\n        display: 'flex',\n        flexGrow: 0,\n        flexShrink: 0,\n        flexBasis: 'auto',\n        flexDirection: 'row-reverse',\n        alignItems: 'center',\n        margin: '8px 8px 8px 0',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 8\n          }\n        }\n      },\n      isMultiline && {\n        margin: '0px 12px 12px 0',\n        selectors: {\n          '& button:nth-child(n+2)': {\n            marginLeft: 12\n          }\n        }\n      }\n    ]\n  };\n};\n"]}