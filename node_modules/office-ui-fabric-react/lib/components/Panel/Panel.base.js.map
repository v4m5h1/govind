{"version":3,"file":"Panel.base.js","sourceRoot":"../src/","sources":["components/Panel/Panel.base.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAC;AAC1C,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,OAAO,EAAE,MAAM,eAAe,CAAC;AACxC,OAAO,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AACpC,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAsB,MAAM,eAAe,CAAC;AAC5E,OAAO,EACL,oBAAoB,EACpB,aAAa,EACb,kBAAkB,EAClB,aAAa,EACb,eAAe,EACf,KAAK,EACL,cAAc,EACd,MAAM,EACP,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAuD,SAAS,EAAE,MAAM,eAAe,CAAC;AAE/F,IAAM,aAAa,GAAG,kBAAkB,EAAkC,CAAC;AAQ3E;IAA+B,qCAAuC;IAcpE,mBAAY,KAAkB;QAA9B,YACE,kBAAM,KAAK,CAAC,SAcb;QApBO,YAAM,GAAG,KAAK,CAAC,SAAS,EAAkB,CAAC;QA+K5C,aAAO,GAAG,UAAC,EAAsC;YACtD,IAAI,KAAI,CAAC,OAAO,EAAE;gBAChB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,IAAI,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACxB,KAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;iBAC1B;gBAED,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,EAAE;oBACvC,KAAI,CAAC,QAAQ,CACX;wBACE,WAAW,EAAE,IAAI;qBAClB,EACD;wBACE,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;oBAC1D,CAAC,CACF,CAAC;iBACH;aACF;QACH,CAAC,CAAC;QAEF,gEAAgE;QACxD,yBAAmB,GAAG,UAAC,GAA0B;YACvD,IAAI,GAAG,EAAE;gBACP,oBAAoB,CAAC,GAAG,EAAE,KAAI,CAAC,OAAO,CAAC,CAAC;aACzC;iBAAM;gBACL,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,kBAAkB,CAAC,CAAC;aAC3C;YACD,KAAI,CAAC,kBAAkB,GAAG,GAAG,CAAC;QAChC,CAAC,CAAC;QAMM,yBAAmB,GAAG,UAAC,KAAkB;YAC/C,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,yBAAyB,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,kBAAkB,IAAI,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE;gBACzG,OAAO,IAAI,CAAC;aACb;YACO,IAAA,0CAA2D,EAA3D,iFAA2D,CAAgB;YACnF,OAAO,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,UAAU,IAAG,yBAAyB,CAAC,KAAK,EAAE,KAAI,CAAC,0BAA0B,CAAC,CAAO,CAAC;QAChI,CAAC,CAAC;QAEM,gCAA0B,GAAG,UAAC,KAAkB;YAC9C,IAAA,iDAAoB,EAAE,qCAAc,CAAW;YACvD,IAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;YACzB,IAAI,cAAc,EAAE;gBAClB,wEAAwE;gBACxE,+DAA+D;gBAC/D,iHAAiH;gBACjH,eAAe;gBACf,OAAO,CACL,oBAAC,UAAU;gBACT,wEAAwE;gBACxE,+BAA+B;;oBAD/B,wEAAwE;oBACxE,+BAA+B;oBAC/B,MAAM,EAAE;wBACN,IAAI,EAAE;4BACJ,MAAM,EAAE,MAAM;4BACd,KAAK,EAAE,MAAM;4BACb,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,gBAAgB;4BACrC,QAAQ,EAAE,aAAa,CAAC,KAAK;yBAC9B;wBACD,WAAW,EAAE;4BACX,KAAK,EAAE,KAAK,CAAC,OAAO,CAAC,cAAc;yBACpC;qBACF,EACD,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,WAAW,EACvC,OAAO,EAAE,KAAI,CAAC,aAAa,EAC3B,SAAS,EAAE,oBAAoB,EAC/B,KAAK,EAAE,oBAAoB,qBACV,IAAI,EACrB,SAAS,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,GACjC,CACH,CAAC;aACH;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEM,qBAAe,GAAG,UACxB,KAAkB,EAClB,aAA2D,EAC3D,YAAiC;YAEzB,IAAA,6BAAU,CAAW;YAE7B,IAAI,UAAU,EAAE;gBACd,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM;oBACrC,2BAAG,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,IAAI,EAAC,SAAS,gBAAa,CAAC,IACtF,UAAU,CACT,CACA,CACP,CAAC;aACH;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QAEM,mBAAa,GAAG,UAAC,KAAkB;YACzC,OAAO,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,OAAO,IAAG,KAAK,CAAC,QAAQ,CAAO,CAAC;QAC1E,CAAC,CAAC;QAEM,qBAAe,GAAG,UAAC,KAAkB;YACnC,IAAA,sCAA4B,EAA5B,iDAA4B,CAAgB;YACpD,IAAI,qBAAqB,EAAE;gBACzB,OAAO,CACL,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,MAAM;oBACrC,6BAAK,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC,WAAW,IAAG,qBAAqB,EAAE,CAAO,CACzE,CACP,CAAC;aACH;YACD,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QA4BM,mBAAa,GAAG,UAAC,EAAQ;YAC/B,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QACnB,CAAC,CAAC;QAEM,2BAAqB,GAAG;YAC9B,KAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,KAAI,CAAC,QAAQ,CAAC;gBACZ,WAAW,EAAE,KAAK;aACnB,CAAC,CAAC;YAEH,IAAI,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;gBACvC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;aACvB;YAED,IAAI,CAAC,KAAI,CAAC,OAAO,IAAI,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBAC3C,KAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;aAC1B;QACH,CAAC,CAAC;QAlUA,KAAI,CAAC,iBAAiB,CAAC;YACrB,sBAAsB,EAAE,oBAAoB;YAC5C,oBAAoB,EAAE,oBAAoB;YAC1C,sBAAsB,EAAE,oBAAoB;SAC7C,CAAC,CAAC;QACH,KAAI,CAAC,OAAO,GAAG,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;QAE9B,KAAI,CAAC,KAAK,GAAG;YACX,cAAc,EAAE,KAAK;YACrB,WAAW,EAAE,KAAK;YAClB,EAAE,EAAE,KAAK,CAAC,OAAO,CAAC;SACnB,CAAC;;IACJ,CAAC;IAEM,qCAAiB,GAAxB;QACE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,qBAAqB,CAAC,CAAC;QAE9D,IAAI,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YAC/C,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;SAC9E;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACrB,IAAI,CAAC,IAAI,EAAE,CAAC;SACb;IACH,CAAC;IAEM,sCAAkB,GAAzB,UAA0B,aAA0B;QAClD,IAAM,wBAAwB,GAAG,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7E,IAAM,gCAAgC,GAAG,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC;QAExF,IAAI,wBAAwB,IAAI,CAAC,gCAAgC,EAAE;YACjE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;SAC9E;aAAM,IAAI,CAAC,wBAAwB,IAAI,gCAAgC,EAAE;YACxE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,WAAW,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;SAC/E;IACH,CAAC;IAEM,6CAAyB,GAAhC,UAAiC,QAAqB;QACpD,IAAI,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,OAAO,EAAE;YACpC,IAAI,QAAQ,CAAC,MAAM,EAAE;gBACnB,IAAI,CAAC,IAAI,EAAE,CAAC;aACb;iBAAM;gBACL,IAAI,CAAC,OAAO,EAAE,CAAC;aAChB;SACF;IACH,CAAC;IAEM,0BAAM,GAAb;QACQ,IAAA,eAwBQ,EAvBZ,iBAAc,EAAd,mCAAc,EACd,oDAAuB,EACvB,kDAAsB,EACtB,0CAAkB,EAClB,8CAAoB,EACpB,kCAAc,EACd,0BAAU,EACV,uBAAoB,EAApB,yCAAoB,EACpB,kDAAsB,EACtB,0BAAU,EACV,sCAAgB,EAChB,kCAAc,EACd,wCAAiB,EACjB,0BAAU,EACV,cAAI,EACJ,kBAAM,EACN,gBAAK,EACL,4BAAW,EACX,2BAAwC,EAAxC,6DAAwC,EACxC,0BAA6C,EAA7C,kEAA6C,EAC7C,sBAAqC,EAArC,0DAAqC,EACrC,oBAAiC,EAAjC,sDAAiC,EACjC,sBAAqC,EAArC,0DAAqC,CACxB;QACT,IAAA,eAAgD,EAA9C,kCAAc,EAAE,4BAAW,EAAE,UAAE,CAAgB;QACvD,IAAM,MAAM,GAAG,IAAI,KAAK,SAAS,CAAC,cAAc,IAAI,IAAI,KAAK,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;QACjG,IAAM,KAAK,GAAG,MAAM,EAAE,CAAC;QACvB,IAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QAC/C,IAAM,YAAY,GAAG,UAAU,IAAI,EAAE,GAAG,aAAa,CAAC;QACtD,IAAM,iBAAiB,GAAG,IAAI,KAAK,SAAS,CAAC,MAAM,IAAI,IAAI,KAAK,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;QACnH,IAAM,WAAW,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;QAE9D,IAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC;QAE5B,IAAI,CAAC,MAAM,IAAI,CAAC,WAAW,IAAI,CAAC,iBAAiB,EAAE;YACjD,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,WAAW,GAAG,aAAa,CAAC,MAAO,EAAE;YACxC,KAAK,EAAE,KAAM;YACb,SAAS,WAAA;YACT,sBAAsB,EAAE,kBAAkB,CAAC,CAAC,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS;YACrF,cAAc,gBAAA;YACd,eAAe,iBAAA;YACf,WAAW,aAAA;YACX,gBAAgB,kBAAA;YAChB,cAAc,gBAAA;YACd,aAAa,eAAA;YACb,MAAM,QAAA;YACN,iBAAiB,mBAAA;YACjB,IAAI,MAAA;SACL,CAAC,CAAC;QAEK,IAAA,8BAAW,CAAU;QAE7B,IAAI,OAAO,CAAC;QACZ,IAAI,UAAU,IAAI,MAAM,EAAE;YACxB,OAAO,GAAG,oBAAC,OAAO,IAAC,SAAS,EAAE,WAAW,CAAC,OAAO,EAAE,YAAY,EAAE,KAAK,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,SAAS,GAAI,CAAC;SACvI;QAED,IAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,EAAE,YAAY,CAAC,CAAC;QAE9E,OAAO,CACL,oBAAC,KAAK,uBAAK,UAAU;YACnB,oBAAC,KAAK,IACJ,IAAI,EAAC,QAAQ,gBACF,MAAM,EACjB,cAAc,EAAE,MAAM,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,EACjD,SAAS,EAAE,IAAI,CAAC,OAAO,EACvB,SAAS,EAAE,WAAW,CAAC,WAAW;gBAElC,6DAAkB,CAAC,MAAM,IAAI,WAAW,IAAM,WAAW,IAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,WAAW,CAAC,IAAI;oBACrG,OAAO;oBACR,oBAAC,aAAa,qBACZ,sBAAsB,EAAE,sBAAsB,EAC9C,oBAAoB,EAAE,CAAC,UAAU,IAAI,CAAC,iBAAiB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,oBAAoB,EAClG,sBAAsB,EAAE,sBAAsB,EAC9C,2BAA2B,EAAE,IAAI,IAC7B,kBAAkB,IACtB,SAAS,EAAE,WAAW,CAAC,IAAI,EAC3B,KAAK,EAAE,iBAAiB,EACxB,uBAAuB,EAAE,uBAAuB;wBAEhD,6BAAK,SAAS,EAAE,WAAW,CAAC,QAAQ,qBAAmB,IAAI,IACxD,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,mBAAmB,CAAC,CACrD;wBACN,6BAAK,SAAS,EAAE,WAAW,CAAC,YAAY;4BACrC,MAAM;4BACP,6BAAK,GAAG,EAAE,IAAI,CAAC,mBAAmB,EAAE,SAAS,EAAE,WAAW,CAAC,iBAAiB,wBAAsB,IAAI,IACnG,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CACzC;4BACL,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,eAAe,CAAC,CAC7C,CACQ,CACZ,CACA,CACF,CACT,CAAC;IACJ,CAAC;IAEM,wBAAI,GAAX;QAAA,iBAgBC;QAfC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,QAAQ,CACX;gBACE,WAAW,EAAE,IAAI;aAClB,EACD;gBACE,KAAI,CAAC,MAAM,CAAC,UAAU,CAAC,KAAI,CAAC,qBAAqB,EAAE,GAAG,CAAC,CAAC;YAC1D,CAAC,CACF,CAAC;YAEF,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;gBACrB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;aACrB;SACF;IACH,CAAC;IAgCO,8CAA0B,GAAlC,UAAmC,KAAkB;QACnD,OAAO,CAAC,CAAC,KAAK,CAAC,UAAU,IAAI,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;IAC9C,CAAC;IAgFO,yCAAqB,GAA7B;QACE,IAAM,iBAAiB,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAClD,IAAI,iBAAiB,EAAE;YACrB,IAAM,MAAM,GAAG,iBAAiB,CAAC,YAAY,CAAC;YAC9C,IAAM,aAAW,GAAG,iBAAiB,CAAC,YAAY,CAAC;YAEnD,IAAI,CAAC,QAAQ,CAAC;gBACZ,cAAc,EAAE,MAAM,GAAG,aAAW,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;aACpD,CAAC,CAAC;SACJ;IACH,CAAC;IAEO,wCAAoB,GAA5B,UAA6B,EAAO;QAClC,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QAClC,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,EAAE;YACzB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE;gBACtC,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;oBAC3B,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;oBAC1B,EAAE,CAAC,cAAc,EAAE,CAAC;iBACrB;qBAAM;oBACL,IAAI,CAAC,OAAO,EAAE,CAAC;iBAChB;aACF;SACF;IACH,CAAC;IA/Ta,sBAAY,GAAgB;QACxC,iBAAiB,EAAE,KAAK;QACxB,MAAM,EAAE,KAAK;QACb,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,IAAI;QACpB,IAAI,EAAE,SAAS,CAAC,aAAa;KAC9B,CAAC;IA6UJ,gBAAC;CAAA,AApVD,CAA+B,aAAa,GAoV3C;SApVY,SAAS","sourcesContent":["import * as React from 'react';\nimport { IconButton } from '../../Button';\nimport { Layer } from '../../Layer';\nimport { Overlay } from '../../Overlay';\nimport { Popup } from '../../Popup';\nimport { getTheme, IconFontSizes, IProcessedStyleSet } from '../../Styling';\nimport {\n  allowScrollOnElement,\n  BaseComponent,\n  classNamesFunction,\n  divProperties,\n  elementContains,\n  getId,\n  getNativeProps,\n  getRTL\n} from '../../Utilities';\nimport { FocusTrapZone } from '../FocusTrapZone/index';\nimport { IPanel, IPanelProps, IPanelStyleProps, IPanelStyles, PanelType } from './Panel.types';\n\nconst getClassNames = classNamesFunction<IPanelStyleProps, IPanelStyles>();\n\nexport interface IPanelState {\n  isFooterSticky?: boolean;\n  isAnimating?: boolean;\n  id?: string;\n}\n\nexport class PanelBase extends BaseComponent<IPanelProps, IPanelState> implements IPanel {\n  public static defaultProps: IPanelProps = {\n    isHiddenOnDismiss: false,\n    isOpen: false,\n    isBlocking: true,\n    hasCloseButton: true,\n    type: PanelType.smallFixedFar\n  };\n\n  private _panel = React.createRef<HTMLDivElement>();\n  private _classNames: IProcessedStyleSet<IPanelStyles>;\n  private _scrollableContent: HTMLDivElement | null;\n  private _isOpen: boolean;\n\n  constructor(props: IPanelProps) {\n    super(props);\n\n    this._warnDeprecations({\n      ignoreExternalFocusing: 'focusTrapZoneProps',\n      forceFocusInsideTrap: 'focusTrapZoneProps',\n      firstFocusableSelector: 'focusTrapZoneProps'\n    });\n    this._isOpen = !!props.isOpen;\n\n    this.state = {\n      isFooterSticky: false,\n      isAnimating: false,\n      id: getId('Panel')\n    };\n  }\n\n  public componentDidMount(): void {\n    this._events.on(window, 'resize', this._updateFooterPosition);\n\n    if (this._shouldListenForOuterClick(this.props)) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n\n    if (this.props.isOpen) {\n      this.open();\n    }\n  }\n\n  public componentDidUpdate(previousProps: IPanelProps): void {\n    const shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\n    const previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\n\n    if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\n      this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    } else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\n      this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\n    }\n  }\n\n  public componentWillReceiveProps(newProps: IPanelProps): void {\n    if (newProps.isOpen !== this._isOpen) {\n      if (newProps.isOpen) {\n        this.open();\n      } else {\n        this.dismiss();\n      }\n    }\n  }\n\n  public render(): JSX.Element | null {\n    const {\n      className = '',\n      elementToFocusOnDismiss,\n      firstFocusableSelector,\n      focusTrapZoneProps,\n      forceFocusInsideTrap,\n      hasCloseButton,\n      headerText,\n      headerClassName = '',\n      ignoreExternalFocusing,\n      isBlocking,\n      isFooterAtBottom,\n      isLightDismiss,\n      isHiddenOnDismiss,\n      layerProps,\n      type,\n      styles,\n      theme,\n      customWidth,\n      onLightDismissClick = this._onPanelClick,\n      onRenderNavigation = this._onRenderNavigation,\n      onRenderHeader = this._onRenderHeader,\n      onRenderBody = this._onRenderBody,\n      onRenderFooter = this._onRenderFooter\n    } = this.props;\n    const { isFooterSticky, isAnimating, id } = this.state;\n    const isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\n    const isRTL = getRTL();\n    const isOnRightSide = isRTL ? isLeft : !isLeft;\n    const headerTextId = headerText && id + '-headerText';\n    const customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\n    const nativeProps = getNativeProps(this.props, divProperties);\n\n    const isOpen = this._isOpen;\n\n    if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\n      return null;\n    }\n\n    this._classNames = getClassNames(styles!, {\n      theme: theme!,\n      className,\n      focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\n      hasCloseButton,\n      headerClassName,\n      isAnimating,\n      isFooterAtBottom,\n      isFooterSticky,\n      isOnRightSide,\n      isOpen,\n      isHiddenOnDismiss,\n      type\n    });\n\n    const { _classNames } = this;\n\n    let overlay;\n    if (isBlocking && isOpen) {\n      overlay = <Overlay className={_classNames.overlay} isDarkThemed={false} onClick={isLightDismiss ? onLightDismissClick : undefined} />;\n    }\n\n    const header = onRenderHeader(this.props, this._onRenderHeader, headerTextId);\n\n    return (\n      <Layer {...layerProps}>\n        <Popup\n          role=\"dialog\"\n          aria-modal=\"true\"\n          ariaLabelledBy={header ? headerTextId : undefined}\n          onDismiss={this.dismiss}\n          className={_classNames.hiddenPanel}\n        >\n          <div aria-hidden={!isOpen && isAnimating} {...nativeProps} ref={this._panel} className={_classNames.root}>\n            {overlay}\n            <FocusTrapZone\n              ignoreExternalFocusing={ignoreExternalFocusing}\n              forceFocusInsideTrap={!isBlocking || (isHiddenOnDismiss && !isOpen) ? false : forceFocusInsideTrap}\n              firstFocusableSelector={firstFocusableSelector}\n              isClickableOutsideFocusTrap={true}\n              {...focusTrapZoneProps}\n              className={_classNames.main}\n              style={customWidthStyles}\n              elementToFocusOnDismiss={elementToFocusOnDismiss}\n            >\n              <div className={_classNames.commands} data-is-visible={true}>\n                {onRenderNavigation(this.props, this._onRenderNavigation)}\n              </div>\n              <div className={_classNames.contentInner}>\n                {header}\n                <div ref={this._allowScrollOnPanel} className={_classNames.scrollableContent} data-is-scrollable={true}>\n                  {onRenderBody(this.props, this._onRenderBody)}\n                </div>\n                {onRenderFooter(this.props, this._onRenderFooter)}\n              </div>\n            </FocusTrapZone>\n          </div>\n        </Popup>\n      </Layer>\n    );\n  }\n\n  public open() {\n    if (!this._isOpen) {\n      this._isOpen = true;\n      this.setState(\n        {\n          isAnimating: true\n        },\n        () => {\n          this._async.setTimeout(this._onTransitionComplete, 200);\n        }\n      );\n\n      if (this.props.onOpen) {\n        this.props.onOpen();\n      }\n    }\n  }\n\n  public dismiss = (ev?: React.SyntheticEvent<HTMLElement>): void => {\n    if (this._isOpen) {\n      this._isOpen = false;\n      if (this.props.onDismiss) {\n        this.props.onDismiss(ev);\n      }\n\n      if (!ev || (ev && !ev.defaultPrevented)) {\n        this.setState(\n          {\n            isAnimating: true\n          },\n          () => {\n            this._async.setTimeout(this._onTransitionComplete, 200);\n          }\n        );\n      }\n    }\n  };\n\n  // Allow the user to scroll within the panel but not on the body\n  private _allowScrollOnPanel = (elt: HTMLDivElement | null): void => {\n    if (elt) {\n      allowScrollOnElement(elt, this._events);\n    } else {\n      this._events.off(this._scrollableContent);\n    }\n    this._scrollableContent = elt;\n  };\n\n  private _shouldListenForOuterClick(props: IPanelProps): boolean {\n    return !!props.isBlocking && !!props.isOpen;\n  }\n\n  private _onRenderNavigation = (props: IPanelProps): JSX.Element | null => {\n    if (!this.props.onRenderNavigationContent && !this.props.onRenderNavigation && !this.props.hasCloseButton) {\n      return null;\n    }\n    const { onRenderNavigationContent = this._onRenderNavigationContent } = this.props;\n    return <div className={this._classNames.navigation}>{onRenderNavigationContent(props, this._onRenderNavigationContent)}</div>;\n  };\n\n  private _onRenderNavigationContent = (props: IPanelProps): JSX.Element | null => {\n    const { closeButtonAriaLabel, hasCloseButton } = props;\n    const theme = getTheme();\n    if (hasCloseButton) {\n      // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\n      // const iconButtonStyles = this._classNames.subComponentStyles\n      // ? (this._classNames.subComponentStyles.iconButton as IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles>)\n      // : undefined;\n      return (\n        <IconButton\n          // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\n          // className={iconButtonStyles}\n          styles={{\n            root: {\n              height: 'auto',\n              width: '44px',\n              color: theme.palette.neutralSecondary,\n              fontSize: IconFontSizes.large\n            },\n            rootHovered: {\n              color: theme.palette.neutralPrimary\n            }\n          }}\n          className={this._classNames.closeButton}\n          onClick={this._onPanelClick}\n          ariaLabel={closeButtonAriaLabel}\n          title={closeButtonAriaLabel}\n          data-is-visible={true}\n          iconProps={{ iconName: 'Cancel' }}\n        />\n      );\n    }\n    return null;\n  };\n\n  private _onRenderHeader = (\n    props: IPanelProps,\n    defaultRender?: (props?: IPanelProps) => JSX.Element | null,\n    headerTextId?: string | undefined\n  ): JSX.Element | null => {\n    const { headerText } = props;\n\n    if (headerText) {\n      return (\n        <div className={this._classNames.header}>\n          <p className={this._classNames.headerText} id={headerTextId} role=\"heading\" aria-level={2}>\n            {headerText}\n          </p>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _onRenderBody = (props: IPanelProps): JSX.Element => {\n    return <div className={this._classNames.content}>{props.children}</div>;\n  };\n\n  private _onRenderFooter = (props: IPanelProps): JSX.Element | null => {\n    const { onRenderFooterContent = null } = this.props;\n    if (onRenderFooterContent) {\n      return (\n        <div className={this._classNames.footer}>\n          <div className={this._classNames.footerInner}>{onRenderFooterContent()}</div>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  private _updateFooterPosition(): void {\n    const scrollableContent = this._scrollableContent;\n    if (scrollableContent) {\n      const height = scrollableContent.clientHeight;\n      const innerHeight = scrollableContent.scrollHeight;\n\n      this.setState({\n        isFooterSticky: height < innerHeight ? true : false\n      });\n    }\n  }\n\n  private _dismissOnOuterClick(ev: any): void {\n    const panel = this._panel.current;\n    if (this._isOpen && panel) {\n      if (!elementContains(panel, ev.target)) {\n        if (this.props.onOuterClick) {\n          this.props.onOuterClick();\n          ev.preventDefault();\n        } else {\n          this.dismiss();\n        }\n      }\n    }\n  }\n\n  private _onPanelClick = (ev?: any): void => {\n    this.dismiss(ev);\n  };\n\n  private _onTransitionComplete = (): void => {\n    this._updateFooterPosition();\n    this.setState({\n      isAnimating: false\n    });\n\n    if (this._isOpen && this.props.onOpened) {\n      this.props.onOpened();\n    }\n\n    if (!this._isOpen && this.props.onDismissed) {\n      this.props.onDismissed();\n    }\n  };\n}\n"]}